{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.push.js\");\n\n/*!\n * qrcode.vue v3.3.3\n * A Vue.js component to generate QRCode.\n * Â© 2017-2021 @scopewu(https://github.com/scopewu)\n * MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('vue')) : typeof define === 'function' && define.amd ? define(['vue'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.QrcodeVue = factory(global.Vue));\n})(this, function (vue) {\n  'use strict';\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\n\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  };\n\n  var mode$1 = {\n    MODE_NUMBER: 1 << 0,\n    MODE_ALPHA_NUM: 1 << 1,\n    MODE_8BIT_BYTE: 1 << 2,\n    MODE_KANJI: 1 << 3\n  };\n  var mode = mode$1;\n\n  function QR8bitByte(data) {\n    this.mode = mode.MODE_8BIT_BYTE;\n    this.data = data;\n  }\n\n  QR8bitByte.prototype = {\n    getLength: function (buffer) {\n      return this.data.length;\n    },\n    write: function (buffer) {\n      for (var i = 0; i < this.data.length; i++) {\n        // not JIS ...\n        buffer.put(this.data.charCodeAt(i), 8);\n      }\n    }\n  };\n  var _8BitByte = QR8bitByte;\n  var ErrorCorrectLevel = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n  }; // ErrorCorrectLevel\n\n  var ECL = ErrorCorrectLevel;\n\n  function QRRSBlock(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n  }\n\n  QRRSBlock.RS_BLOCK_TABLE = [// L\n  // M\n  // Q\n  // H\n  // 1\n  [1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], // 2\n  [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], // 3\n  [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], // 4\t\t\n  [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], // 5\n  [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], // 6\n  [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], // 7\t\t\n  [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], // 8\n  [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], // 9\n  [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], // 10\t\t\n  [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], // 11\n  [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], // 12\n  [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], // 13\n  [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], // 14\n  [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], // 15\n  [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], // 16\n  [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], // 17\n  [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], // 18\n  [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], // 19\n  [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], // 20\n  [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], // 21\n  [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], // 22\n  [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], // 23\n  [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], // 24\n  [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], // 25\n  [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], // 26\n  [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], // 27\n  [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], // 28\n  [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], // 29\n  [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], // 30\n  [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], // 31\n  [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], // 32\n  [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], // 33\n  [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], // 34\n  [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], // 35\n  [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], // 36\n  [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], // 37\n  [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], // 38\n  [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], // 39\n  [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], // 40\n  [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n\n  QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\n    if (rsBlock == undefined) {\n      throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n    }\n\n    var length = rsBlock.length / 3;\n    var list = new Array();\n\n    for (var i = 0; i < length; i++) {\n      var count = rsBlock[i * 3 + 0];\n      var totalCount = rsBlock[i * 3 + 1];\n      var dataCount = rsBlock[i * 3 + 2];\n\n      for (var j = 0; j < count; j++) {\n        list.push(new QRRSBlock(totalCount, dataCount));\n      }\n    }\n\n    return list;\n  };\n\n  QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n    switch (errorCorrectLevel) {\n      case ECL.L:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\n      case ECL.M:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\n      case ECL.Q:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\n      case ECL.H:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\n      default:\n        return undefined;\n    }\n  };\n\n  var RSBlock$1 = QRRSBlock;\n\n  function QRBitBuffer() {\n    this.buffer = new Array();\n    this.length = 0;\n  }\n\n  QRBitBuffer.prototype = {\n    get: function (index) {\n      var bufIndex = Math.floor(index / 8);\n      return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n    },\n    put: function (num, length) {\n      for (var i = 0; i < length; i++) {\n        this.putBit((num >>> length - i - 1 & 1) == 1);\n      }\n    },\n    getLengthInBits: function () {\n      return this.length;\n    },\n    putBit: function (bit) {\n      var bufIndex = Math.floor(this.length / 8);\n\n      if (this.buffer.length <= bufIndex) {\n        this.buffer.push(0);\n      }\n\n      if (bit) {\n        this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n      }\n\n      this.length++;\n    }\n  };\n  var BitBuffer$1 = QRBitBuffer;\n  var QRMath = {\n    glog: function (n) {\n      if (n < 1) {\n        throw new Error(\"glog(\" + n + \")\");\n      }\n\n      return QRMath.LOG_TABLE[n];\n    },\n    gexp: function (n) {\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return QRMath.EXP_TABLE[n];\n    },\n    EXP_TABLE: new Array(256),\n    LOG_TABLE: new Array(256)\n  };\n\n  for (var i = 0; i < 8; i++) {\n    QRMath.EXP_TABLE[i] = 1 << i;\n  }\n\n  for (var i = 8; i < 256; i++) {\n    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n  }\n\n  for (var i = 0; i < 255; i++) {\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n  }\n\n  var math$2 = QRMath;\n  var math$1 = math$2;\n\n  function QRPolynomial(num, shift) {\n    if (num.length == undefined) {\n      throw new Error(num.length + \"/\" + shift);\n    }\n\n    var offset = 0;\n\n    while (offset < num.length && num[offset] == 0) {\n      offset++;\n    }\n\n    this.num = new Array(num.length - offset + shift);\n\n    for (var i = 0; i < num.length - offset; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  QRPolynomial.prototype = {\n    get: function (index) {\n      return this.num[index];\n    },\n    getLength: function () {\n      return this.num.length;\n    },\n    multiply: function (e) {\n      var num = new Array(this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < this.getLength(); i++) {\n        for (var j = 0; j < e.getLength(); j++) {\n          num[i + j] ^= math$1.gexp(math$1.glog(this.get(i)) + math$1.glog(e.get(j)));\n        }\n      }\n\n      return new QRPolynomial(num, 0);\n    },\n    mod: function (e) {\n      if (this.getLength() - e.getLength() < 0) {\n        return this;\n      }\n\n      var ratio = math$1.glog(this.get(0)) - math$1.glog(e.get(0));\n      var num = new Array(this.getLength());\n\n      for (var i = 0; i < this.getLength(); i++) {\n        num[i] = this.get(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i++) {\n        num[i] ^= math$1.gexp(math$1.glog(e.get(i)) + ratio);\n      } // recursive call\n\n\n      return new QRPolynomial(num, 0).mod(e);\n    }\n  };\n  var Polynomial$2 = QRPolynomial;\n  var Mode = mode$1;\n  var Polynomial$1 = Polynomial$2;\n  var math = math$2;\n  var QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n  };\n  var QRUtil = {\n    PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n    G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n    G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n    G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n    getBCHTypeInfo: function (data) {\n      var d = data << 10;\n\n      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n        d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n      }\n\n      return (data << 10 | d) ^ QRUtil.G15_MASK;\n    },\n    getBCHTypeNumber: function (data) {\n      var d = data << 12;\n\n      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n        d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n      }\n\n      return data << 12 | d;\n    },\n    getBCHDigit: function (data) {\n      var digit = 0;\n\n      while (data != 0) {\n        digit++;\n        data >>>= 1;\n      }\n\n      return digit;\n    },\n    getPatternPosition: function (typeNumber) {\n      return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n    getMask: function (maskPattern, i, j) {\n      switch (maskPattern) {\n        case QRMaskPattern.PATTERN000:\n          return (i + j) % 2 == 0;\n\n        case QRMaskPattern.PATTERN001:\n          return i % 2 == 0;\n\n        case QRMaskPattern.PATTERN010:\n          return j % 3 == 0;\n\n        case QRMaskPattern.PATTERN011:\n          return (i + j) % 3 == 0;\n\n        case QRMaskPattern.PATTERN100:\n          return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\n        case QRMaskPattern.PATTERN101:\n          return i * j % 2 + i * j % 3 == 0;\n\n        case QRMaskPattern.PATTERN110:\n          return (i * j % 2 + i * j % 3) % 2 == 0;\n\n        case QRMaskPattern.PATTERN111:\n          return (i * j % 3 + (i + j) % 2) % 2 == 0;\n\n        default:\n          throw new Error(\"bad maskPattern:\" + maskPattern);\n      }\n    },\n    getErrorCorrectPolynomial: function (errorCorrectLength) {\n      var a = new Polynomial$1([1], 0);\n\n      for (var i = 0; i < errorCorrectLength; i++) {\n        a = a.multiply(new Polynomial$1([1, math.gexp(i)], 0));\n      }\n\n      return a;\n    },\n    getLengthInBits: function (mode, type) {\n      if (1 <= type && type < 10) {\n        // 1 - 9\n        switch (mode) {\n          case Mode.MODE_NUMBER:\n            return 10;\n\n          case Mode.MODE_ALPHA_NUM:\n            return 9;\n\n          case Mode.MODE_8BIT_BYTE:\n            return 8;\n\n          case Mode.MODE_KANJI:\n            return 8;\n\n          default:\n            throw new Error(\"mode:\" + mode);\n        }\n      } else if (type < 27) {\n        // 10 - 26\n        switch (mode) {\n          case Mode.MODE_NUMBER:\n            return 12;\n\n          case Mode.MODE_ALPHA_NUM:\n            return 11;\n\n          case Mode.MODE_8BIT_BYTE:\n            return 16;\n\n          case Mode.MODE_KANJI:\n            return 10;\n\n          default:\n            throw new Error(\"mode:\" + mode);\n        }\n      } else if (type < 41) {\n        // 27 - 40\n        switch (mode) {\n          case Mode.MODE_NUMBER:\n            return 14;\n\n          case Mode.MODE_ALPHA_NUM:\n            return 13;\n\n          case Mode.MODE_8BIT_BYTE:\n            return 16;\n\n          case Mode.MODE_KANJI:\n            return 12;\n\n          default:\n            throw new Error(\"mode:\" + mode);\n        }\n      } else {\n        throw new Error(\"type:\" + type);\n      }\n    },\n    getLostPoint: function (qrCode) {\n      var moduleCount = qrCode.getModuleCount();\n      var lostPoint = 0; // LEVEL1\n\n      for (var row = 0; row < moduleCount; row++) {\n        for (var col = 0; col < moduleCount; col++) {\n          var sameCount = 0;\n          var dark = qrCode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r++) {\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c++) {\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrCode.isDark(row + r, col + c)) {\n                sameCount++;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += 3 + sameCount - 5;\n          }\n        }\n      } // LEVEL2\n\n\n      for (var row = 0; row < moduleCount - 1; row++) {\n        for (var col = 0; col < moduleCount - 1; col++) {\n          var count = 0;\n          if (qrCode.isDark(row, col)) count++;\n          if (qrCode.isDark(row + 1, col)) count++;\n          if (qrCode.isDark(row, col + 1)) count++;\n          if (qrCode.isDark(row + 1, col + 1)) count++;\n\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      } // LEVEL3\n\n\n      for (var row = 0; row < moduleCount; row++) {\n        for (var col = 0; col < moduleCount - 6; col++) {\n          if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col++) {\n        for (var row = 0; row < moduleCount - 6; row++) {\n          if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n            lostPoint += 40;\n          }\n        }\n      } // LEVEL4\n\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col++) {\n        for (var row = 0; row < moduleCount; row++) {\n          if (qrCode.isDark(row, col)) {\n            darkCount++;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n      return lostPoint;\n    }\n  };\n  var util$1 = QRUtil;\n  var BitByte = _8BitByte;\n  var RSBlock = RSBlock$1;\n  var BitBuffer = BitBuffer$1;\n  var util = util$1;\n  var Polynomial = Polynomial$2;\n\n  function QRCode$1(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n    this.modules = null;\n    this.moduleCount = 0;\n    this.dataCache = null;\n    this.dataList = [];\n  } // for client side minification\n\n\n  var proto = QRCode$1.prototype;\n\n  proto.addData = function (data) {\n    var newData = new BitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  };\n\n  proto.isDark = function (row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + \",\" + col);\n    }\n\n    return this.modules[row][col];\n  };\n\n  proto.getModuleCount = function () {\n    return this.moduleCount;\n  };\n\n  proto.make = function () {\n    // Calculate automatically typeNumber if provided is < 1\n    if (this.typeNumber < 1) {\n      var typeNumber = 1;\n\n      for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n        var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n        var buffer = new BitBuffer();\n        var totalDataCount = 0;\n\n        for (var i = 0; i < rsBlocks.length; i++) {\n          totalDataCount += rsBlocks[i].dataCount;\n        }\n\n        for (var i = 0; i < this.dataList.length; i++) {\n          var data = this.dataList[i];\n          buffer.put(data.mode, 4);\n          buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n          data.write(buffer);\n        }\n\n        if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n      }\n\n      this.typeNumber = typeNumber;\n    }\n\n    this.makeImpl(false, this.getBestMaskPattern());\n  };\n\n  proto.makeImpl = function (test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n\n    for (var row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n\n      for (var col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null; //(col + row) % 3;\n      }\n    }\n\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n\n    if (this.dataCache == null) {\n      this.dataCache = QRCode$1.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n\n    this.mapData(this.dataCache, maskPattern);\n  };\n\n  proto.setupPositionProbePattern = function (row, col) {\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n        if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n          this.modules[row + r][col + c] = true;\n        } else {\n          this.modules[row + r][col + c] = false;\n        }\n      }\n    }\n  };\n\n  proto.getBestMaskPattern = function () {\n    var minLostPoint = 0;\n    var pattern = 0;\n\n    for (var i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      var lostPoint = util.getLostPoint(this);\n\n      if (i == 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n\n    return pattern;\n  };\n\n  proto.createMovieClip = function (target_mc, instance_name, depth) {\n    var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    var cs = 1;\n    this.make();\n\n    for (var row = 0; row < this.modules.length; row++) {\n      var y = row * cs;\n\n      for (var col = 0; col < this.modules[row].length; col++) {\n        var x = col * cs;\n        var dark = this.modules[row][col];\n\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n\n    return qr_mc;\n  };\n\n  proto.setupTimingPattern = function () {\n    for (var r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue;\n      }\n\n      this.modules[r][6] = r % 2 == 0;\n    }\n\n    for (var c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue;\n      }\n\n      this.modules[6][c] = c % 2 == 0;\n    }\n  };\n\n  proto.setupPositionAdjustPattern = function () {\n    var pos = util.getPatternPosition(this.typeNumber);\n\n    for (var i = 0; i < pos.length; i++) {\n      for (var j = 0; j < pos.length; j++) {\n        var row = pos[i];\n        var col = pos[j];\n\n        if (this.modules[row][col] != null) {\n          continue;\n        }\n\n        for (var r = -2; r <= 2; r++) {\n          for (var c = -2; c <= 2; c++) {\n            if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  proto.setupTypeNumber = function (test) {\n    var bits = util.getBCHTypeNumber(this.typeNumber);\n\n    for (var i = 0; i < 18; i++) {\n      var mod = !test && (bits >> i & 1) == 1;\n      this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n    }\n\n    for (var i = 0; i < 18; i++) {\n      var mod = !test && (bits >> i & 1) == 1;\n      this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n    }\n  };\n\n  proto.setupTypeInfo = function (test, maskPattern) {\n    var data = this.errorCorrectLevel << 3 | maskPattern;\n    var bits = util.getBCHTypeInfo(data); // vertical\t\t\n\n    for (var i = 0; i < 15; i++) {\n      var mod = !test && (bits >> i & 1) == 1;\n\n      if (i < 6) {\n        this.modules[i][8] = mod;\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod;\n      }\n    } // horizontal\n\n\n    for (var i = 0; i < 15; i++) {\n      var mod = !test && (bits >> i & 1) == 1;\n\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - i - 1] = mod;\n      }\n    } // fixed module\n\n\n    this.modules[this.moduleCount - 8][8] = !test;\n  };\n\n  proto.mapData = function (data, maskPattern) {\n    var inc = -1;\n    var row = this.moduleCount - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n\n    for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col == 6) col--;\n\n      while (true) {\n        for (var c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            var dark = false;\n\n            if (byteIndex < data.length) {\n              dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n            }\n\n            var mask = util.getMask(maskPattern, row, col - c);\n\n            if (mask) {\n              dark = !dark;\n            }\n\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n\n            if (bitIndex == -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n\n        row += inc;\n\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  };\n\n  QRCode$1.PAD0 = 0xEC;\n  QRCode$1.PAD1 = 0x11;\n\n  QRCode$1.createData = function (typeNumber, errorCorrectLevel, dataList) {\n    var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    var buffer = new BitBuffer();\n\n    for (var i = 0; i < dataList.length; i++) {\n      var data = dataList[i];\n      buffer.put(data.mode, 4);\n      buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    } // calc num max data.\n\n\n    var totalDataCount = 0;\n\n    for (var i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n      throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n    } // end code\n\n\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n      buffer.put(0, 4);\n    } // padding\n\n\n    while (buffer.getLengthInBits() % 8 != 0) {\n      buffer.putBit(false);\n    } // padding\n\n\n    while (true) {\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n\n      buffer.put(QRCode$1.PAD0, 8);\n\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n\n      buffer.put(QRCode$1.PAD1, 8);\n    }\n\n    return QRCode$1.createBytes(buffer, rsBlocks);\n  };\n\n  QRCode$1.createBytes = function (buffer, rsBlocks) {\n    var offset = 0;\n    var maxDcCount = 0;\n    var maxEcCount = 0;\n    var dcdata = new Array(rsBlocks.length);\n    var ecdata = new Array(rsBlocks.length);\n\n    for (var r = 0; r < rsBlocks.length; r++) {\n      var dcCount = rsBlocks[r].dataCount;\n      var ecCount = rsBlocks[r].totalCount - dcCount;\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n      dcdata[r] = new Array(dcCount);\n\n      for (var i = 0; i < dcdata[r].length; i++) {\n        dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n      }\n\n      offset += dcCount;\n      var rsPoly = util.getErrorCorrectPolynomial(ecCount);\n      var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n      var modPoly = rawPoly.mod(rsPoly);\n      ecdata[r] = new Array(rsPoly.getLength() - 1);\n\n      for (var i = 0; i < ecdata[r].length; i++) {\n        var modIndex = i + modPoly.getLength() - ecdata[r].length;\n        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n      }\n    }\n\n    var totalCodeCount = 0;\n\n    for (var i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n\n    var data = new Array(totalCodeCount);\n    var index = 0;\n\n    for (var i = 0; i < maxDcCount; i++) {\n      for (var r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n\n    for (var i = 0; i < maxEcCount; i++) {\n      for (var r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n\n    return data;\n  };\n\n  var QRCode_1 = QRCode$1;\n  var defaultErrorCorrectLevel = 'H'; // Thanks the `qrcode.react`\n\n  var SUPPORTS_PATH2D = function () {\n    try {\n      new Path2D().addPath(new Path2D());\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }();\n\n  function QRCode(data, level) {\n    var errorCorrectLevel = ErrorCorrectLevel[level]; // We'll use type===-1 to force QRCode to automatically pick the best type\n\n    var qrcode = new QRCode_1(-1, errorCorrectLevel);\n    qrcode.addData(toUTF8String(data));\n    qrcode.make();\n    return qrcode;\n  }\n\n  function validErrorCorrectLevel(level) {\n    return level in ErrorCorrectLevel;\n  }\n  /**\r\n   * Encode UTF16 to UTF8.\r\n   * See: http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\r\n   * @param str {string}\r\n   * @returns {string}\r\n   */\n\n\n  function toUTF8String(str) {\n    var utf8Str = '';\n\n    for (var i = 0; i < str.length; i++) {\n      var charCode = str.charCodeAt(i);\n\n      if (charCode < 0x0080) {\n        utf8Str += String.fromCharCode(charCode);\n      } else if (charCode < 0x0800) {\n        utf8Str += String.fromCharCode(0xc0 | charCode >> 6);\n        utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n      } else if (charCode < 0xd800 || charCode >= 0xe000) {\n        utf8Str += String.fromCharCode(0xe0 | charCode >> 12);\n        utf8Str += String.fromCharCode(0x80 | charCode >> 6 & 0x3f);\n        utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n      } else {\n        // surrogate pair\n        i++; // UTF-16 encodes 0x10000-0x10FFFF by\n        // subtracting 0x10000 and splitting the\n        // 20 bits of 0x0-0xFFFFF into two halves\n\n        charCode = 0x10000 + ((charCode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n        utf8Str += String.fromCharCode(0xf0 | charCode >> 18);\n        utf8Str += String.fromCharCode(0x80 | charCode >> 12 & 0x3f);\n        utf8Str += String.fromCharCode(0x80 | charCode >> 6 & 0x3f);\n        utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n      }\n    }\n\n    return utf8Str;\n  }\n\n  function generatePath(modules, margin) {\n    if (margin === void 0) {\n      margin = 0;\n    }\n\n    var ops = [];\n    modules.forEach(function (row, y) {\n      var start = null;\n      row.forEach(function (cell, x) {\n        if (!cell && start !== null) {\n          // M0 0h7v1H0z injects the space with the move and drops the comma,\n          // saving a char per operation\n          ops.push(\"M\" + (start + margin) + \" \" + (y + margin) + \"h\" + (x - start) + \"v1H\" + (start + margin) + \"z\");\n          start = null;\n          return;\n        } // end of row, clean up or skip\n\n\n        if (x === row.length - 1) {\n          if (!cell) {\n            // We would have closed the op above already so this can only mean\n            // 2+ light modules in a row.\n            return;\n          }\n\n          if (start === null) {\n            // Just a single dark module.\n            ops.push(\"M\" + (x + margin) + \",\" + (y + margin) + \" h1v1H\" + (x + margin) + \"z\");\n          } else {\n            // Otherwise finish the current line.\n            ops.push(\"M\" + (start + margin) + \",\" + (y + margin) + \" h\" + (x + 1 - start) + \"v1H\" + (start + margin) + \"z\");\n          }\n\n          return;\n        }\n\n        if (cell && start === null) {\n          start = x;\n        }\n      });\n    });\n    return ops.join('');\n  }\n\n  var QRCodeProps = {\n    value: {\n      type: String,\n      required: true,\n      \"default\": ''\n    },\n    size: {\n      type: Number,\n      \"default\": 100\n    },\n    level: {\n      type: String,\n      \"default\": defaultErrorCorrectLevel,\n      validator: function (l) {\n        return validErrorCorrectLevel(l);\n      }\n    },\n    background: {\n      type: String,\n      \"default\": '#fff'\n    },\n    foreground: {\n      type: String,\n      \"default\": '#000'\n    },\n    margin: {\n      type: Number,\n      required: false,\n      \"default\": 0\n    }\n  };\n\n  var QRCodeVueProps = __assign(__assign({}, QRCodeProps), {\n    renderAs: {\n      type: String,\n      required: false,\n      \"default\": 'canvas',\n      validator: function (as) {\n        return ['canvas', 'svg'].indexOf(as) > -1;\n      }\n    }\n  });\n\n  var QRCodeSvg = vue.defineComponent({\n    name: 'QRCodeSvg',\n    props: QRCodeProps,\n    setup: function (props) {\n      var numCells = vue.ref(0);\n      var fgPath = vue.ref('');\n\n      var generate = function () {\n        var value = props.value,\n            level = props.level,\n            margin = props.margin;\n        var cells = QRCode(value, level).modules;\n        numCells.value = cells.length + margin * 2; // Drawing strategy: instead of a rect per module, we're going to create a\n        // single path for the dark modules and layer that on top of a light rect,\n        // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\n        // way faster than DOM ops.\n        // For level 1, 441 nodes -> 2\n        // For level 40, 31329 -> 2\n\n        fgPath.value = generatePath(cells, margin);\n      };\n\n      generate();\n      vue.onUpdated(generate);\n      return function () {\n        return vue.h('svg', {\n          width: props.size,\n          height: props.size,\n          'shape-rendering': \"crispEdges\",\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: \"0 0 \" + numCells.value + \" \" + numCells.value\n        }, [vue.h('path', {\n          fill: props.background,\n          d: \"M0,0 h\" + numCells.value + \"v\" + numCells.value + \"H0z\"\n        }), vue.h('path', {\n          fill: props.foreground,\n          d: fgPath.value\n        })]);\n      };\n    }\n  });\n  var QRCodeCanvas = vue.defineComponent({\n    name: 'QRCodeCanvas',\n    props: QRCodeProps,\n    setup: function (props) {\n      var canvasEl = vue.ref(null);\n\n      var generate = function () {\n        var value = props.value,\n            level = props.level,\n            size = props.size,\n            margin = props.margin,\n            background = props.background,\n            foreground = props.foreground;\n        var cells = QRCode(value, level).modules;\n        var numCells = cells.length + margin * 2;\n        var canvas = canvasEl.value;\n\n        if (!canvas) {\n          return;\n        }\n\n        var ctx = canvas.getContext('2d');\n\n        if (!ctx) {\n          return;\n        }\n\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        var scale = size / numCells * devicePixelRatio;\n        canvas.height = canvas.width = size * devicePixelRatio;\n        ctx.scale(scale, scale);\n        ctx.fillStyle = background;\n        ctx.fillRect(0, 0, numCells, numCells);\n        ctx.fillStyle = foreground;\n\n        if (SUPPORTS_PATH2D) {\n          ctx.fill(new Path2D(generatePath(cells, margin)));\n        } else {\n          cells.forEach(function (row, rdx) {\n            row.forEach(function (cell, cdx) {\n              if (cell) {\n                ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n              }\n            });\n          });\n        }\n      };\n\n      vue.onMounted(generate);\n      vue.onUpdated(generate);\n      return function () {\n        return vue.h('canvas', {\n          ref: canvasEl,\n          style: {\n            width: props.size + \"px\",\n            height: props.size + \"px\"\n          }\n        });\n      };\n    }\n  });\n  var QrcodeVue = vue.defineComponent({\n    name: 'Qrcode',\n    render: function () {\n      var _a = this.$props,\n          renderAs = _a.renderAs,\n          value = _a.value,\n          _size = _a.size,\n          _margin = _a.margin,\n          _level = _a.level,\n          background = _a.background,\n          foreground = _a.foreground;\n      var size = _size >>> 0;\n      var margin = _margin >>> 0;\n      var level = validErrorCorrectLevel(_level) ? _level : defaultErrorCorrectLevel;\n      return vue.h(renderAs === 'svg' ? QRCodeSvg : QRCodeCanvas, {\n        value: value,\n        size: size,\n        margin: margin,\n        level: level,\n        background: background,\n        foreground: foreground\n      });\n    },\n    props: QRCodeVueProps\n  });\n  return QrcodeVue;\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","globalThis","self","QrcodeVue","Vue","vue","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","mode$1","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","mode","QR8bitByte","data","getLength","buffer","write","put","charCodeAt","_8BitByte","ErrorCorrectLevel","L","M","Q","H","ECL","QRRSBlock","totalCount","dataCount","RS_BLOCK_TABLE","getRSBlocks","typeNumber","errorCorrectLevel","rsBlock","getRsBlockTable","undefined","Error","list","Array","count","j","push","RSBlock$1","QRBitBuffer","get","index","bufIndex","Math","floor","num","putBit","getLengthInBits","bit","BitBuffer$1","QRMath","glog","LOG_TABLE","gexp","EXP_TABLE","math$2","math$1","QRPolynomial","shift","offset","multiply","e","mod","ratio","Polynomial$2","Mode","Polynomial$1","math","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHTypeInfo","d","getBCHDigit","getBCHTypeNumber","digit","getPatternPosition","getMask","maskPattern","getErrorCorrectPolynomial","errorCorrectLength","a","type","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","darkCount","abs","util$1","BitByte","RSBlock","BitBuffer","util","Polynomial","QRCode$1","modules","dataCache","dataList","proto","addData","newData","make","rsBlocks","totalDataCount","makeImpl","getBestMaskPattern","test","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","x","beginFill","moveTo","lineTo","endFill","pos","bits","inc","bitIndex","byteIndex","mask","PAD0","PAD1","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","rawPoly","modPoly","modIndex","totalCodeCount","QRCode_1","defaultErrorCorrectLevel","SUPPORTS_PATH2D","Path2D","addPath","QRCode","level","qrcode","toUTF8String","validErrorCorrectLevel","str","utf8Str","charCode","String","fromCharCode","generatePath","margin","ops","forEach","start","cell","join","QRCodeProps","value","required","size","Number","validator","l","background","foreground","QRCodeVueProps","renderAs","as","indexOf","QRCodeSvg","defineComponent","name","props","setup","numCells","ref","fgPath","generate","cells","onUpdated","h","width","height","xmlns","viewBox","fill","QRCodeCanvas","canvasEl","canvas","ctx","getContext","devicePixelRatio","window","scale","fillStyle","fillRect","rdx","cdx","onMounted","style","render","_a","$props","_size","_margin","_level"],"sources":["/Users/muromac/uni/testing/node_modules/qrcode.vue/dist/qrcode.vue.browser.js"],"sourcesContent":["/*!\n * qrcode.vue v3.3.3\n * A Vue.js component to generate QRCode.\n * Â© 2017-2021 @scopewu(https://github.com/scopewu)\n * MIT License.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('vue')) :\n    typeof define === 'function' && define.amd ? define(['vue'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.QrcodeVue = factory(global.Vue));\n})(this, (function (vue) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var mode$1 = {\n    \tMODE_NUMBER :\t\t1 << 0,\n    \tMODE_ALPHA_NUM : \t1 << 1,\n    \tMODE_8BIT_BYTE : \t1 << 2,\n    \tMODE_KANJI :\t\t1 << 3\n    };\n\n    var mode = mode$1;\n\n    function QR8bitByte(data) {\n    \tthis.mode = mode.MODE_8BIT_BYTE;\n    \tthis.data = data;\n    }\n\n    QR8bitByte.prototype = {\n\n    \tgetLength : function(buffer) {\n    \t\treturn this.data.length;\n    \t},\n    \t\n    \twrite : function(buffer) {\n    \t\tfor (var i = 0; i < this.data.length; i++) {\n    \t\t\t// not JIS ...\n    \t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n    \t\t}\n    \t}\n    };\n\n    var _8BitByte = QR8bitByte;\n\n    var ErrorCorrectLevel = {\n    \tL : 1,\n    \tM : 0,\n    \tQ : 3,\n    \tH : 2\n    };\n\n    // ErrorCorrectLevel\n    var ECL = ErrorCorrectLevel;\n\n    function QRRSBlock(totalCount, dataCount) {\n    \tthis.totalCount = totalCount;\n    \tthis.dataCount  = dataCount;\n    }\n\n    QRRSBlock.RS_BLOCK_TABLE = [\n\n    \t// L\n    \t// M\n    \t// Q\n    \t// H\n\n    \t// 1\n    \t[1, 26, 19],\n    \t[1, 26, 16],\n    \t[1, 26, 13],\n    \t[1, 26, 9],\n    \t\n    \t// 2\n    \t[1, 44, 34],\n    \t[1, 44, 28],\n    \t[1, 44, 22],\n    \t[1, 44, 16],\n\n    \t// 3\n    \t[1, 70, 55],\n    \t[1, 70, 44],\n    \t[2, 35, 17],\n    \t[2, 35, 13],\n\n    \t// 4\t\t\n    \t[1, 100, 80],\n    \t[2, 50, 32],\n    \t[2, 50, 24],\n    \t[4, 25, 9],\n    \t\n    \t// 5\n    \t[1, 134, 108],\n    \t[2, 67, 43],\n    \t[2, 33, 15, 2, 34, 16],\n    \t[2, 33, 11, 2, 34, 12],\n    \t\n    \t// 6\n    \t[2, 86, 68],\n    \t[4, 43, 27],\n    \t[4, 43, 19],\n    \t[4, 43, 15],\n    \t\n    \t// 7\t\t\n    \t[2, 98, 78],\n    \t[4, 49, 31],\n    \t[2, 32, 14, 4, 33, 15],\n    \t[4, 39, 13, 1, 40, 14],\n    \t\n    \t// 8\n    \t[2, 121, 97],\n    \t[2, 60, 38, 2, 61, 39],\n    \t[4, 40, 18, 2, 41, 19],\n    \t[4, 40, 14, 2, 41, 15],\n    \t\n    \t// 9\n    \t[2, 146, 116],\n    \t[3, 58, 36, 2, 59, 37],\n    \t[4, 36, 16, 4, 37, 17],\n    \t[4, 36, 12, 4, 37, 13],\n    \t\n    \t// 10\t\t\n    \t[2, 86, 68, 2, 87, 69],\n    \t[4, 69, 43, 1, 70, 44],\n    \t[6, 43, 19, 2, 44, 20],\n    \t[6, 43, 15, 2, 44, 16],\n\n    \t// 11\n    \t[4, 101, 81],\n    \t[1, 80, 50, 4, 81, 51],\n    \t[4, 50, 22, 4, 51, 23],\n    \t[3, 36, 12, 8, 37, 13],\n\n    \t// 12\n    \t[2, 116, 92, 2, 117, 93],\n    \t[6, 58, 36, 2, 59, 37],\n    \t[4, 46, 20, 6, 47, 21],\n    \t[7, 42, 14, 4, 43, 15],\n\n    \t// 13\n    \t[4, 133, 107],\n    \t[8, 59, 37, 1, 60, 38],\n    \t[8, 44, 20, 4, 45, 21],\n    \t[12, 33, 11, 4, 34, 12],\n\n    \t// 14\n    \t[3, 145, 115, 1, 146, 116],\n    \t[4, 64, 40, 5, 65, 41],\n    \t[11, 36, 16, 5, 37, 17],\n    \t[11, 36, 12, 5, 37, 13],\n\n    \t// 15\n    \t[5, 109, 87, 1, 110, 88],\n    \t[5, 65, 41, 5, 66, 42],\n    \t[5, 54, 24, 7, 55, 25],\n    \t[11, 36, 12],\n\n    \t// 16\n    \t[5, 122, 98, 1, 123, 99],\n    \t[7, 73, 45, 3, 74, 46],\n    \t[15, 43, 19, 2, 44, 20],\n    \t[3, 45, 15, 13, 46, 16],\n\n    \t// 17\n    \t[1, 135, 107, 5, 136, 108],\n    \t[10, 74, 46, 1, 75, 47],\n    \t[1, 50, 22, 15, 51, 23],\n    \t[2, 42, 14, 17, 43, 15],\n\n    \t// 18\n    \t[5, 150, 120, 1, 151, 121],\n    \t[9, 69, 43, 4, 70, 44],\n    \t[17, 50, 22, 1, 51, 23],\n    \t[2, 42, 14, 19, 43, 15],\n\n    \t// 19\n    \t[3, 141, 113, 4, 142, 114],\n    \t[3, 70, 44, 11, 71, 45],\n    \t[17, 47, 21, 4, 48, 22],\n    \t[9, 39, 13, 16, 40, 14],\n\n    \t// 20\n    \t[3, 135, 107, 5, 136, 108],\n    \t[3, 67, 41, 13, 68, 42],\n    \t[15, 54, 24, 5, 55, 25],\n    \t[15, 43, 15, 10, 44, 16],\n\n    \t// 21\n    \t[4, 144, 116, 4, 145, 117],\n    \t[17, 68, 42],\n    \t[17, 50, 22, 6, 51, 23],\n    \t[19, 46, 16, 6, 47, 17],\n\n    \t// 22\n    \t[2, 139, 111, 7, 140, 112],\n    \t[17, 74, 46],\n    \t[7, 54, 24, 16, 55, 25],\n    \t[34, 37, 13],\n\n    \t// 23\n    \t[4, 151, 121, 5, 152, 122],\n    \t[4, 75, 47, 14, 76, 48],\n    \t[11, 54, 24, 14, 55, 25],\n    \t[16, 45, 15, 14, 46, 16],\n\n    \t// 24\n    \t[6, 147, 117, 4, 148, 118],\n    \t[6, 73, 45, 14, 74, 46],\n    \t[11, 54, 24, 16, 55, 25],\n    \t[30, 46, 16, 2, 47, 17],\n\n    \t// 25\n    \t[8, 132, 106, 4, 133, 107],\n    \t[8, 75, 47, 13, 76, 48],\n    \t[7, 54, 24, 22, 55, 25],\n    \t[22, 45, 15, 13, 46, 16],\n\n    \t// 26\n    \t[10, 142, 114, 2, 143, 115],\n    \t[19, 74, 46, 4, 75, 47],\n    \t[28, 50, 22, 6, 51, 23],\n    \t[33, 46, 16, 4, 47, 17],\n\n    \t// 27\n    \t[8, 152, 122, 4, 153, 123],\n    \t[22, 73, 45, 3, 74, 46],\n    \t[8, 53, 23, 26, 54, 24],\n    \t[12, 45, 15, 28, 46, 16],\n\n    \t// 28\n    \t[3, 147, 117, 10, 148, 118],\n    \t[3, 73, 45, 23, 74, 46],\n    \t[4, 54, 24, 31, 55, 25],\n    \t[11, 45, 15, 31, 46, 16],\n\n    \t// 29\n    \t[7, 146, 116, 7, 147, 117],\n    \t[21, 73, 45, 7, 74, 46],\n    \t[1, 53, 23, 37, 54, 24],\n    \t[19, 45, 15, 26, 46, 16],\n\n    \t// 30\n    \t[5, 145, 115, 10, 146, 116],\n    \t[19, 75, 47, 10, 76, 48],\n    \t[15, 54, 24, 25, 55, 25],\n    \t[23, 45, 15, 25, 46, 16],\n\n    \t// 31\n    \t[13, 145, 115, 3, 146, 116],\n    \t[2, 74, 46, 29, 75, 47],\n    \t[42, 54, 24, 1, 55, 25],\n    \t[23, 45, 15, 28, 46, 16],\n\n    \t// 32\n    \t[17, 145, 115],\n    \t[10, 74, 46, 23, 75, 47],\n    \t[10, 54, 24, 35, 55, 25],\n    \t[19, 45, 15, 35, 46, 16],\n\n    \t// 33\n    \t[17, 145, 115, 1, 146, 116],\n    \t[14, 74, 46, 21, 75, 47],\n    \t[29, 54, 24, 19, 55, 25],\n    \t[11, 45, 15, 46, 46, 16],\n\n    \t// 34\n    \t[13, 145, 115, 6, 146, 116],\n    \t[14, 74, 46, 23, 75, 47],\n    \t[44, 54, 24, 7, 55, 25],\n    \t[59, 46, 16, 1, 47, 17],\n\n    \t// 35\n    \t[12, 151, 121, 7, 152, 122],\n    \t[12, 75, 47, 26, 76, 48],\n    \t[39, 54, 24, 14, 55, 25],\n    \t[22, 45, 15, 41, 46, 16],\n\n    \t// 36\n    \t[6, 151, 121, 14, 152, 122],\n    \t[6, 75, 47, 34, 76, 48],\n    \t[46, 54, 24, 10, 55, 25],\n    \t[2, 45, 15, 64, 46, 16],\n\n    \t// 37\n    \t[17, 152, 122, 4, 153, 123],\n    \t[29, 74, 46, 14, 75, 47],\n    \t[49, 54, 24, 10, 55, 25],\n    \t[24, 45, 15, 46, 46, 16],\n\n    \t// 38\n    \t[4, 152, 122, 18, 153, 123],\n    \t[13, 74, 46, 32, 75, 47],\n    \t[48, 54, 24, 14, 55, 25],\n    \t[42, 45, 15, 32, 46, 16],\n\n    \t// 39\n    \t[20, 147, 117, 4, 148, 118],\n    \t[40, 75, 47, 7, 76, 48],\n    \t[43, 54, 24, 22, 55, 25],\n    \t[10, 45, 15, 67, 46, 16],\n\n    \t// 40\n    \t[19, 148, 118, 6, 149, 119],\n    \t[18, 75, 47, 31, 76, 48],\n    \t[34, 54, 24, 34, 55, 25],\n    \t[20, 45, 15, 61, 46, 16]\n    ];\n\n    QRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n    \t\n    \tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n    \t\n    \tif (rsBlock == undefined) {\n    \t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n    \t}\n\n    \tvar length = rsBlock.length / 3;\n    \t\n    \tvar list = new Array();\n    \t\n    \tfor (var i = 0; i < length; i++) {\n\n    \t\tvar count = rsBlock[i * 3 + 0];\n    \t\tvar totalCount = rsBlock[i * 3 + 1];\n    \t\tvar dataCount  = rsBlock[i * 3 + 2];\n\n    \t\tfor (var j = 0; j < count; j++) {\n    \t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n    \t\t}\n    \t}\n    \t\n    \treturn list;\n    };\n\n    QRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\n    \tswitch(errorCorrectLevel) {\n    \tcase ECL.L :\n    \t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n    \tcase ECL.M :\n    \t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n    \tcase ECL.Q :\n    \t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n    \tcase ECL.H :\n    \t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n    \tdefault :\n    \t\treturn undefined;\n    \t}\n    };\n\n    var RSBlock$1 = QRRSBlock;\n\n    function QRBitBuffer() {\n    \tthis.buffer = new Array();\n    \tthis.length = 0;\n    }\n\n    QRBitBuffer.prototype = {\n\n    \tget : function(index) {\n    \t\tvar bufIndex = Math.floor(index / 8);\n    \t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    \t},\n    \t\n    \tput : function(num, length) {\n    \t\tfor (var i = 0; i < length; i++) {\n    \t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n    \t\t}\n    \t},\n    \t\n    \tgetLengthInBits : function() {\n    \t\treturn this.length;\n    \t},\n    \t\n    \tputBit : function(bit) {\n    \t\n    \t\tvar bufIndex = Math.floor(this.length / 8);\n    \t\tif (this.buffer.length <= bufIndex) {\n    \t\t\tthis.buffer.push(0);\n    \t\t}\n    \t\n    \t\tif (bit) {\n    \t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n    \t\t}\n    \t\n    \t\tthis.length++;\n    \t}\n    };\n\n    var BitBuffer$1 = QRBitBuffer;\n\n    var QRMath = {\n\n    \tglog : function(n) {\n    \t\n    \t\tif (n < 1) {\n    \t\t\tthrow new Error(\"glog(\" + n + \")\");\n    \t\t}\n    \t\t\n    \t\treturn QRMath.LOG_TABLE[n];\n    \t},\n    \t\n    \tgexp : function(n) {\n    \t\n    \t\twhile (n < 0) {\n    \t\t\tn += 255;\n    \t\t}\n    \t\n    \t\twhile (n >= 256) {\n    \t\t\tn -= 255;\n    \t\t}\n    \t\n    \t\treturn QRMath.EXP_TABLE[n];\n    \t},\n    \t\n    \tEXP_TABLE : new Array(256),\n    \t\n    \tLOG_TABLE : new Array(256)\n\n    };\n    \t\n    for (var i = 0; i < 8; i++) {\n    \tQRMath.EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i++) {\n    \tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n    \t\t^ QRMath.EXP_TABLE[i - 5]\n    \t\t^ QRMath.EXP_TABLE[i - 6]\n    \t\t^ QRMath.EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i++) {\n    \tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n    }\n\n    var math$2 = QRMath;\n\n    var math$1 = math$2;\n\n    function QRPolynomial(num, shift) {\n\n    \tif (num.length == undefined) {\n    \t\tthrow new Error(num.length + \"/\" + shift);\n    \t}\n\n    \tvar offset = 0;\n\n    \twhile (offset < num.length && num[offset] == 0) {\n    \t\toffset++;\n    \t}\n\n    \tthis.num = new Array(num.length - offset + shift);\n    \tfor (var i = 0; i < num.length - offset; i++) {\n    \t\tthis.num[i] = num[i + offset];\n    \t}\n    }\n\n    QRPolynomial.prototype = {\n\n    \tget : function(index) {\n    \t\treturn this.num[index];\n    \t},\n    \t\n    \tgetLength : function() {\n    \t\treturn this.num.length;\n    \t},\n    \t\n    \tmultiply : function(e) {\n    \t\n    \t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n    \t\n    \t\tfor (var i = 0; i < this.getLength(); i++) {\n    \t\t\tfor (var j = 0; j < e.getLength(); j++) {\n    \t\t\t\tnum[i + j] ^= math$1.gexp(math$1.glog(this.get(i) ) + math$1.glog(e.get(j) ) );\n    \t\t\t}\n    \t\t}\n    \t\n    \t\treturn new QRPolynomial(num, 0);\n    \t},\n    \t\n    \tmod : function(e) {\n    \t\n    \t\tif (this.getLength() - e.getLength() < 0) {\n    \t\t\treturn this;\n    \t\t}\n    \t\n    \t\tvar ratio = math$1.glog(this.get(0) ) - math$1.glog(e.get(0) );\n    \t\n    \t\tvar num = new Array(this.getLength() );\n    \t\t\n    \t\tfor (var i = 0; i < this.getLength(); i++) {\n    \t\t\tnum[i] = this.get(i);\n    \t\t}\n    \t\t\n    \t\tfor (var i = 0; i < e.getLength(); i++) {\n    \t\t\tnum[i] ^= math$1.gexp(math$1.glog(e.get(i) ) + ratio);\n    \t\t}\n    \t\n    \t\t// recursive call\n    \t\treturn new QRPolynomial(num, 0).mod(e);\n    \t}\n    };\n\n    var Polynomial$2 = QRPolynomial;\n\n    var Mode = mode$1;\n    var Polynomial$1 = Polynomial$2;\n    var math = math$2;\n\n    var QRMaskPattern = {\n    \tPATTERN000 : 0,\n    \tPATTERN001 : 1,\n    \tPATTERN010 : 2,\n    \tPATTERN011 : 3,\n    \tPATTERN100 : 4,\n    \tPATTERN101 : 5,\n    \tPATTERN110 : 6,\n    \tPATTERN111 : 7\n    };\n\n    var QRUtil = {\n\n        PATTERN_POSITION_TABLE : [\n    \t    [],\n    \t    [6, 18],\n    \t    [6, 22],\n    \t    [6, 26],\n    \t    [6, 30],\n    \t    [6, 34],\n    \t    [6, 22, 38],\n    \t    [6, 24, 42],\n    \t    [6, 26, 46],\n    \t    [6, 28, 50],\n    \t    [6, 30, 54],\t\t\n    \t    [6, 32, 58],\n    \t    [6, 34, 62],\n    \t    [6, 26, 46, 66],\n    \t    [6, 26, 48, 70],\n    \t    [6, 26, 50, 74],\n    \t    [6, 30, 54, 78],\n    \t    [6, 30, 56, 82],\n    \t    [6, 30, 58, 86],\n    \t    [6, 34, 62, 90],\n    \t    [6, 28, 50, 72, 94],\n    \t    [6, 26, 50, 74, 98],\n    \t    [6, 30, 54, 78, 102],\n    \t    [6, 28, 54, 80, 106],\n    \t    [6, 32, 58, 84, 110],\n    \t    [6, 30, 58, 86, 114],\n    \t    [6, 34, 62, 90, 118],\n    \t    [6, 26, 50, 74, 98, 122],\n    \t    [6, 30, 54, 78, 102, 126],\n    \t    [6, 26, 52, 78, 104, 130],\n    \t    [6, 30, 56, 82, 108, 134],\n    \t    [6, 34, 60, 86, 112, 138],\n    \t    [6, 30, 58, 86, 114, 142],\n    \t    [6, 34, 62, 90, 118, 146],\n    \t    [6, 30, 54, 78, 102, 126, 150],\n    \t    [6, 24, 50, 76, 102, 128, 154],\n    \t    [6, 28, 54, 80, 106, 132, 158],\n    \t    [6, 32, 58, 84, 110, 136, 162],\n    \t    [6, 26, 54, 82, 110, 138, 166],\n    \t    [6, 30, 58, 86, 114, 142, 170]\n        ],\n\n        G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n        G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n        G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n        getBCHTypeInfo : function(data) {\n    \t    var d = data << 10;\n    \t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n    \t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n    \t    }\n    \t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n        },\n\n        getBCHTypeNumber : function(data) {\n    \t    var d = data << 12;\n    \t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n    \t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n    \t    }\n    \t    return (data << 12) | d;\n        },\n\n        getBCHDigit : function(data) {\n\n    \t    var digit = 0;\n\n    \t    while (data != 0) {\n    \t\t    digit++;\n    \t\t    data >>>= 1;\n    \t    }\n\n    \t    return digit;\n        },\n\n        getPatternPosition : function(typeNumber) {\n    \t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n        },\n\n        getMask : function(maskPattern, i, j) {\n    \t    \n    \t    switch (maskPattern) {\n    \t\t    \n    \t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n    \t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n    \t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n    \t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n    \t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n    \t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n    \t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n    \t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n    \t    default :\n    \t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n    \t    }\n        },\n\n        getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n    \t    var a = new Polynomial$1([1], 0);\n\n    \t    for (var i = 0; i < errorCorrectLength; i++) {\n    \t\t    a = a.multiply(new Polynomial$1([1, math.gexp(i)], 0) );\n    \t    }\n\n    \t    return a;\n        },\n\n        getLengthInBits : function(mode, type) {\n\n    \t    if (1 <= type && type < 10) {\n\n    \t\t    // 1 - 9\n\n    \t\t    switch(mode) {\n    \t\t    case Mode.MODE_NUMBER \t: return 10;\n    \t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n    \t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n    \t\t    case Mode.MODE_KANJI  \t: return 8;\n    \t\t    default :\n    \t\t\t    throw new Error(\"mode:\" + mode);\n    \t\t    }\n\n    \t    } else if (type < 27) {\n\n    \t\t    // 10 - 26\n\n    \t\t    switch(mode) {\n    \t\t    case Mode.MODE_NUMBER \t: return 12;\n    \t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n    \t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n    \t\t    case Mode.MODE_KANJI  \t: return 10;\n    \t\t    default :\n    \t\t\t    throw new Error(\"mode:\" + mode);\n    \t\t    }\n\n    \t    } else if (type < 41) {\n\n    \t\t    // 27 - 40\n\n    \t\t    switch(mode) {\n    \t\t    case Mode.MODE_NUMBER \t: return 14;\n    \t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n    \t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n    \t\t    case Mode.MODE_KANJI  \t: return 12;\n    \t\t    default :\n    \t\t\t    throw new Error(\"mode:\" + mode);\n    \t\t    }\n\n    \t    } else {\n    \t\t    throw new Error(\"type:\" + type);\n    \t    }\n        },\n\n        getLostPoint : function(qrCode) {\n    \t    \n    \t    var moduleCount = qrCode.getModuleCount();\n    \t    \n    \t    var lostPoint = 0;\n    \t    \n    \t    // LEVEL1\n    \t    \n    \t    for (var row = 0; row < moduleCount; row++) {\n\n    \t\t    for (var col = 0; col < moduleCount; col++) {\n\n    \t\t\t    var sameCount = 0;\n    \t\t\t    var dark = qrCode.isDark(row, col);\n\n    \t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n    \t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n    \t\t\t\t\t    continue;\n    \t\t\t\t    }\n\n    \t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n    \t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n    \t\t\t\t\t\t    continue;\n    \t\t\t\t\t    }\n\n    \t\t\t\t\t    if (r == 0 && c == 0) {\n    \t\t\t\t\t\t    continue;\n    \t\t\t\t\t    }\n\n    \t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n    \t\t\t\t\t\t    sameCount++;\n    \t\t\t\t\t    }\n    \t\t\t\t    }\n    \t\t\t    }\n\n    \t\t\t    if (sameCount > 5) {\n    \t\t\t\t    lostPoint += (3 + sameCount - 5);\n    \t\t\t    }\n    \t\t    }\n    \t    }\n\n    \t    // LEVEL2\n\n    \t    for (var row = 0; row < moduleCount - 1; row++) {\n    \t\t    for (var col = 0; col < moduleCount - 1; col++) {\n    \t\t\t    var count = 0;\n    \t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n    \t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n    \t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n    \t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n    \t\t\t    if (count == 0 || count == 4) {\n    \t\t\t\t    lostPoint += 3;\n    \t\t\t    }\n    \t\t    }\n    \t    }\n\n    \t    // LEVEL3\n\n    \t    for (var row = 0; row < moduleCount; row++) {\n    \t\t    for (var col = 0; col < moduleCount - 6; col++) {\n    \t\t\t    if (qrCode.isDark(row, col)\n    \t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n    \t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n    \t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n    \t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n    \t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n    \t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n    \t\t\t\t    lostPoint += 40;\n    \t\t\t    }\n    \t\t    }\n    \t    }\n\n    \t    for (var col = 0; col < moduleCount; col++) {\n    \t\t    for (var row = 0; row < moduleCount - 6; row++) {\n    \t\t\t    if (qrCode.isDark(row, col)\n    \t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n    \t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n    \t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n    \t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n    \t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n    \t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n    \t\t\t\t    lostPoint += 40;\n    \t\t\t    }\n    \t\t    }\n    \t    }\n\n    \t    // LEVEL4\n    \t    \n    \t    var darkCount = 0;\n\n    \t    for (var col = 0; col < moduleCount; col++) {\n    \t\t    for (var row = 0; row < moduleCount; row++) {\n    \t\t\t    if (qrCode.isDark(row, col) ) {\n    \t\t\t\t    darkCount++;\n    \t\t\t    }\n    \t\t    }\n    \t    }\n    \t    \n    \t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    \t    lostPoint += ratio * 10;\n\n    \t    return lostPoint;\t\t\n        }\n    };\n\n    var util$1 = QRUtil;\n\n    var BitByte = _8BitByte;\n    var RSBlock = RSBlock$1;\n    var BitBuffer = BitBuffer$1;\n    var util = util$1;\n    var Polynomial = Polynomial$2;\n\n    function QRCode$1(typeNumber, errorCorrectLevel) {\n    \tthis.typeNumber = typeNumber;\n    \tthis.errorCorrectLevel = errorCorrectLevel;\n    \tthis.modules = null;\n    \tthis.moduleCount = 0;\n    \tthis.dataCache = null;\n    \tthis.dataList = [];\n    }\n\n    // for client side minification\n    var proto = QRCode$1.prototype;\n\n    proto.addData = function(data) {\n    \tvar newData = new BitByte(data);\n    \tthis.dataList.push(newData);\n    \tthis.dataCache = null;\n    };\n\n    proto.isDark = function(row, col) {\n    \tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n    \t\tthrow new Error(row + \",\" + col);\n    \t}\n    \treturn this.modules[row][col];\n    };\n\n    proto.getModuleCount = function() {\n    \treturn this.moduleCount;\n    };\n\n    proto.make = function() {\n    \t// Calculate automatically typeNumber if provided is < 1\n    \tif (this.typeNumber < 1 ){\n    \t\tvar typeNumber = 1;\n    \t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n    \t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n    \t\t\tvar buffer = new BitBuffer();\n    \t\t\tvar totalDataCount = 0;\n    \t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n    \t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n    \t\t\t}\n\n    \t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n    \t\t\t\tvar data = this.dataList[i];\n    \t\t\t\tbuffer.put(data.mode, 4);\n    \t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n    \t\t\t\tdata.write(buffer);\n    \t\t\t}\n    \t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n    \t\t\t\tbreak;\n    \t\t}\n    \t\tthis.typeNumber = typeNumber;\n    \t}\n    \tthis.makeImpl(false, this.getBestMaskPattern() );\n    };\n\n    proto.makeImpl = function(test, maskPattern) {\n    \t\n    \tthis.moduleCount = this.typeNumber * 4 + 17;\n    \tthis.modules = new Array(this.moduleCount);\n    \t\n    \tfor (var row = 0; row < this.moduleCount; row++) {\n    \t\t\n    \t\tthis.modules[row] = new Array(this.moduleCount);\n    \t\t\n    \t\tfor (var col = 0; col < this.moduleCount; col++) {\n    \t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n    \t\t}\n    \t}\n\n    \tthis.setupPositionProbePattern(0, 0);\n    \tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n    \tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n    \tthis.setupPositionAdjustPattern();\n    \tthis.setupTimingPattern();\n    \tthis.setupTypeInfo(test, maskPattern);\n    \t\n    \tif (this.typeNumber >= 7) {\n    \t\tthis.setupTypeNumber(test);\n    \t}\n\n    \tif (this.dataCache == null) {\n    \t\tthis.dataCache = QRCode$1.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    \t}\n\n    \tthis.mapData(this.dataCache, maskPattern);\n    };\n\n    proto.setupPositionProbePattern = function(row, col)  {\n    \t\n    \tfor (var r = -1; r <= 7; r++) {\n    \t\t\n    \t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n    \t\t\n    \t\tfor (var c = -1; c <= 7; c++) {\n    \t\t\t\n    \t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n    \t\t\t\n    \t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n    \t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n    \t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n    \t\t\t\tthis.modules[row + r][col + c] = true;\n    \t\t\t} else {\n    \t\t\t\tthis.modules[row + r][col + c] = false;\n    \t\t\t}\n    \t\t}\t\t\n    \t}\t\t\n    };\n\n    proto.getBestMaskPattern = function() {\n\n    \tvar minLostPoint = 0;\n    \tvar pattern = 0;\n\n    \tfor (var i = 0; i < 8; i++) {\n    \t\t\n    \t\tthis.makeImpl(true, i);\n\n    \t\tvar lostPoint = util.getLostPoint(this);\n\n    \t\tif (i == 0 || minLostPoint >  lostPoint) {\n    \t\t\tminLostPoint = lostPoint;\n    \t\t\tpattern = i;\n    \t\t}\n    \t}\n\n    \treturn pattern;\n    };\n\n    proto.createMovieClip = function(target_mc, instance_name, depth) {\n\n    \tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    \tvar cs = 1;\n\n    \tthis.make();\n\n    \tfor (var row = 0; row < this.modules.length; row++) {\n    \t\t\n    \t\tvar y = row * cs;\n    \t\t\n    \t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\n    \t\t\tvar x = col * cs;\n    \t\t\tvar dark = this.modules[row][col];\n    \t\t\n    \t\t\tif (dark) {\n    \t\t\t\tqr_mc.beginFill(0, 100);\n    \t\t\t\tqr_mc.moveTo(x, y);\n    \t\t\t\tqr_mc.lineTo(x + cs, y);\n    \t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n    \t\t\t\tqr_mc.lineTo(x, y + cs);\n    \t\t\t\tqr_mc.endFill();\n    \t\t\t}\n    \t\t}\n    \t}\n    \t\n    \treturn qr_mc;\n    };\n\n    proto.setupTimingPattern = function() {\n    \t\n    \tfor (var r = 8; r < this.moduleCount - 8; r++) {\n    \t\tif (this.modules[r][6] != null) {\n    \t\t\tcontinue;\n    \t\t}\n    \t\tthis.modules[r][6] = (r % 2 == 0);\n    \t}\n\n    \tfor (var c = 8; c < this.moduleCount - 8; c++) {\n    \t\tif (this.modules[6][c] != null) {\n    \t\t\tcontinue;\n    \t\t}\n    \t\tthis.modules[6][c] = (c % 2 == 0);\n    \t}\n    };\n\n    proto.setupPositionAdjustPattern = function() {\n\n    \tvar pos = util.getPatternPosition(this.typeNumber);\n    \t\n    \tfor (var i = 0; i < pos.length; i++) {\n    \t\n    \t\tfor (var j = 0; j < pos.length; j++) {\n    \t\t\n    \t\t\tvar row = pos[i];\n    \t\t\tvar col = pos[j];\n    \t\t\t\n    \t\t\tif (this.modules[row][col] != null) {\n    \t\t\t\tcontinue;\n    \t\t\t}\n    \t\t\t\n    \t\t\tfor (var r = -2; r <= 2; r++) {\n    \t\t\t\n    \t\t\t\tfor (var c = -2; c <= 2; c++) {\n    \t\t\t\t\n    \t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n    \t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n    \t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n    };\n\n    proto.setupTypeNumber = function(test) {\n\n    \tvar bits = util.getBCHTypeNumber(this.typeNumber);\n\n    \tfor (var i = 0; i < 18; i++) {\n    \t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n    \t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n    \t}\n\n    \tfor (var i = 0; i < 18; i++) {\n    \t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n    \t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n    \t}\n    };\n\n    proto.setupTypeInfo = function(test, maskPattern) {\n\n    \tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n    \tvar bits = util.getBCHTypeInfo(data);\n\n    \t// vertical\t\t\n    \tfor (var i = 0; i < 15; i++) {\n\n    \t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\n    \t\tif (i < 6) {\n    \t\t\tthis.modules[i][8] = mod;\n    \t\t} else if (i < 8) {\n    \t\t\tthis.modules[i + 1][8] = mod;\n    \t\t} else {\n    \t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n    \t\t}\n    \t}\n\n    \t// horizontal\n    \tfor (var i = 0; i < 15; i++) {\n\n    \t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n    \t\t\n    \t\tif (i < 8) {\n    \t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n    \t\t} else if (i < 9) {\n    \t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n    \t\t} else {\n    \t\t\tthis.modules[8][15 - i - 1] = mod;\n    \t\t}\n    \t}\n\n    \t// fixed module\n    \tthis.modules[this.moduleCount - 8][8] = (!test);\n    };\n\n    proto.mapData = function(data, maskPattern) {\n    \t\n    \tvar inc = -1;\n    \tvar row = this.moduleCount - 1;\n    \tvar bitIndex = 7;\n    \tvar byteIndex = 0;\n    \t\n    \tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n    \t\tif (col == 6) col--;\n\n    \t\twhile (true) {\n\n    \t\t\tfor (var c = 0; c < 2; c++) {\n    \t\t\t\t\n    \t\t\t\tif (this.modules[row][col - c] == null) {\n    \t\t\t\t\t\n    \t\t\t\t\tvar dark = false;\n\n    \t\t\t\t\tif (byteIndex < data.length) {\n    \t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n    \t\t\t\t\t}\n\n    \t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\n\n    \t\t\t\t\tif (mask) {\n    \t\t\t\t\t\tdark = !dark;\n    \t\t\t\t\t}\n    \t\t\t\t\t\n    \t\t\t\t\tthis.modules[row][col - c] = dark;\n    \t\t\t\t\tbitIndex--;\n\n    \t\t\t\t\tif (bitIndex == -1) {\n    \t\t\t\t\t\tbyteIndex++;\n    \t\t\t\t\t\tbitIndex = 7;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t\t\t\t\t\n    \t\t\trow += inc;\n\n    \t\t\tif (row < 0 || this.moduleCount <= row) {\n    \t\t\t\trow -= inc;\n    \t\t\t\tinc = -inc;\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t}\n    \t}\n    };\n\n    QRCode$1.PAD0 = 0xEC;\n    QRCode$1.PAD1 = 0x11;\n\n    QRCode$1.createData = function(typeNumber, errorCorrectLevel, dataList) {\n    \t\n    \tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    \t\n    \tvar buffer = new BitBuffer();\n    \t\n    \tfor (var i = 0; i < dataList.length; i++) {\n    \t\tvar data = dataList[i];\n    \t\tbuffer.put(data.mode, 4);\n    \t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n    \t\tdata.write(buffer);\n    \t}\n\n    \t// calc num max data.\n    \tvar totalDataCount = 0;\n    \tfor (var i = 0; i < rsBlocks.length; i++) {\n    \t\ttotalDataCount += rsBlocks[i].dataCount;\n    \t}\n\n    \tif (buffer.getLengthInBits() > totalDataCount * 8) {\n    \t\tthrow new Error(\"code length overflow. (\"\n    \t\t\t+ buffer.getLengthInBits()\n    \t\t\t+ \">\"\n    \t\t\t+  totalDataCount * 8\n    \t\t\t+ \")\");\n    \t}\n\n    \t// end code\n    \tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    \t\tbuffer.put(0, 4);\n    \t}\n\n    \t// padding\n    \twhile (buffer.getLengthInBits() % 8 != 0) {\n    \t\tbuffer.putBit(false);\n    \t}\n\n    \t// padding\n    \twhile (true) {\n    \t\t\n    \t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n    \t\t\tbreak;\n    \t\t}\n    \t\tbuffer.put(QRCode$1.PAD0, 8);\n    \t\t\n    \t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n    \t\t\tbreak;\n    \t\t}\n    \t\tbuffer.put(QRCode$1.PAD1, 8);\n    \t}\n\n    \treturn QRCode$1.createBytes(buffer, rsBlocks);\n    };\n\n    QRCode$1.createBytes = function(buffer, rsBlocks) {\n\n    \tvar offset = 0;\n    \t\n    \tvar maxDcCount = 0;\n    \tvar maxEcCount = 0;\n    \t\n    \tvar dcdata = new Array(rsBlocks.length);\n    \tvar ecdata = new Array(rsBlocks.length);\n    \t\n    \tfor (var r = 0; r < rsBlocks.length; r++) {\n\n    \t\tvar dcCount = rsBlocks[r].dataCount;\n    \t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n    \t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n    \t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n    \t\t\n    \t\tdcdata[r] = new Array(dcCount);\n    \t\t\n    \t\tfor (var i = 0; i < dcdata[r].length; i++) {\n    \t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    \t\t}\n    \t\toffset += dcCount;\n    \t\t\n    \t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\n    \t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n\n    \t\tvar modPoly = rawPoly.mod(rsPoly);\n    \t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n    \t\tfor (var i = 0; i < ecdata[r].length; i++) {\n                var modIndex = i + modPoly.getLength() - ecdata[r].length;\n    \t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n    \t\t}\n\n    \t}\n    \t\n    \tvar totalCodeCount = 0;\n    \tfor (var i = 0; i < rsBlocks.length; i++) {\n    \t\ttotalCodeCount += rsBlocks[i].totalCount;\n    \t}\n\n    \tvar data = new Array(totalCodeCount);\n    \tvar index = 0;\n\n    \tfor (var i = 0; i < maxDcCount; i++) {\n    \t\tfor (var r = 0; r < rsBlocks.length; r++) {\n    \t\t\tif (i < dcdata[r].length) {\n    \t\t\t\tdata[index++] = dcdata[r][i];\n    \t\t\t}\n    \t\t}\n    \t}\n\n    \tfor (var i = 0; i < maxEcCount; i++) {\n    \t\tfor (var r = 0; r < rsBlocks.length; r++) {\n    \t\t\tif (i < ecdata[r].length) {\n    \t\t\t\tdata[index++] = ecdata[r][i];\n    \t\t\t}\n    \t\t}\n    \t}\n\n    \treturn data;\n    };\n\n    var QRCode_1 = QRCode$1;\n\n    var defaultErrorCorrectLevel = 'H';\r\n    // Thanks the `qrcode.react`\r\n    var SUPPORTS_PATH2D = (function () {\r\n        try {\r\n            new Path2D().addPath(new Path2D());\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    })();\r\n    function QRCode(data, level) {\r\n        var errorCorrectLevel = ErrorCorrectLevel[level];\r\n        // We'll use type===-1 to force QRCode to automatically pick the best type\r\n        var qrcode = new QRCode_1(-1, errorCorrectLevel);\r\n        qrcode.addData(toUTF8String(data));\r\n        qrcode.make();\r\n        return qrcode;\r\n    }\r\n    function validErrorCorrectLevel(level) {\r\n        return level in ErrorCorrectLevel;\r\n    }\r\n    /**\r\n     * Encode UTF16 to UTF8.\r\n     * See: http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\r\n     * @param str {string}\r\n     * @returns {string}\r\n     */\r\n    function toUTF8String(str) {\r\n        var utf8Str = '';\r\n        for (var i = 0; i < str.length; i++) {\r\n            var charCode = str.charCodeAt(i);\r\n            if (charCode < 0x0080) {\r\n                utf8Str += String.fromCharCode(charCode);\r\n            }\r\n            else if (charCode < 0x0800) {\r\n                utf8Str += String.fromCharCode(0xc0 | (charCode >> 6));\r\n                utf8Str += String.fromCharCode(0x80 | (charCode & 0x3f));\r\n            }\r\n            else if (charCode < 0xd800 || charCode >= 0xe000) {\r\n                utf8Str += String.fromCharCode(0xe0 | (charCode >> 12));\r\n                utf8Str += String.fromCharCode(0x80 | ((charCode >> 6) & 0x3f));\r\n                utf8Str += String.fromCharCode(0x80 | (charCode & 0x3f));\r\n            }\r\n            else {\r\n                // surrogate pair\r\n                i++;\r\n                // UTF-16 encodes 0x10000-0x10FFFF by\r\n                // subtracting 0x10000 and splitting the\r\n                // 20 bits of 0x0-0xFFFFF into two halves\r\n                charCode =\r\n                    0x10000 + (((charCode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\r\n                utf8Str += String.fromCharCode(0xf0 | (charCode >> 18));\r\n                utf8Str += String.fromCharCode(0x80 | ((charCode >> 12) & 0x3f));\r\n                utf8Str += String.fromCharCode(0x80 | ((charCode >> 6) & 0x3f));\r\n                utf8Str += String.fromCharCode(0x80 | (charCode & 0x3f));\r\n            }\r\n        }\r\n        return utf8Str;\r\n    }\r\n    function generatePath(modules, margin) {\r\n        if (margin === void 0) { margin = 0; }\r\n        var ops = [];\r\n        modules.forEach(function (row, y) {\r\n            var start = null;\r\n            row.forEach(function (cell, x) {\r\n                if (!cell && start !== null) {\r\n                    // M0 0h7v1H0z injects the space with the move and drops the comma,\r\n                    // saving a char per operation\r\n                    ops.push(\"M\" + (start + margin) + \" \" + (y + margin) + \"h\" + (x - start) + \"v1H\" + (start + margin) + \"z\");\r\n                    start = null;\r\n                    return;\r\n                }\r\n                // end of row, clean up or skip\r\n                if (x === row.length - 1) {\r\n                    if (!cell) {\r\n                        // We would have closed the op above already so this can only mean\r\n                        // 2+ light modules in a row.\r\n                        return;\r\n                    }\r\n                    if (start === null) {\r\n                        // Just a single dark module.\r\n                        ops.push(\"M\" + (x + margin) + \",\" + (y + margin) + \" h1v1H\" + (x + margin) + \"z\");\r\n                    }\r\n                    else {\r\n                        // Otherwise finish the current line.\r\n                        ops.push(\"M\" + (start + margin) + \",\" + (y + margin) + \" h\" + (x + 1 - start) + \"v1H\" + (start + margin) + \"z\");\r\n                    }\r\n                    return;\r\n                }\r\n                if (cell && start === null) {\r\n                    start = x;\r\n                }\r\n            });\r\n        });\r\n        return ops.join('');\r\n    }\r\n    var QRCodeProps = {\r\n        value: {\r\n            type: String,\r\n            required: true,\r\n            \"default\": '',\r\n        },\r\n        size: {\r\n            type: Number,\r\n            \"default\": 100,\r\n        },\r\n        level: {\r\n            type: String,\r\n            \"default\": defaultErrorCorrectLevel,\r\n            validator: function (l) { return validErrorCorrectLevel(l); },\r\n        },\r\n        background: {\r\n            type: String,\r\n            \"default\": '#fff',\r\n        },\r\n        foreground: {\r\n            type: String,\r\n            \"default\": '#000',\r\n        },\r\n        margin: {\r\n            type: Number,\r\n            required: false,\r\n            \"default\": 0,\r\n        },\r\n    };\r\n    var QRCodeVueProps = __assign(__assign({}, QRCodeProps), { renderAs: {\r\n            type: String,\r\n            required: false,\r\n            \"default\": 'canvas',\r\n            validator: function (as) { return ['canvas', 'svg'].indexOf(as) > -1; },\r\n        } });\r\n    var QRCodeSvg = vue.defineComponent({\r\n        name: 'QRCodeSvg',\r\n        props: QRCodeProps,\r\n        setup: function (props) {\r\n            var numCells = vue.ref(0);\r\n            var fgPath = vue.ref('');\r\n            var generate = function () {\r\n                var value = props.value, level = props.level, margin = props.margin;\r\n                var cells = QRCode(value, level).modules;\r\n                numCells.value = cells.length + margin * 2;\r\n                // Drawing strategy: instead of a rect per module, we're going to create a\r\n                // single path for the dark modules and layer that on top of a light rect,\r\n                // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\r\n                // way faster than DOM ops.\r\n                // For level 1, 441 nodes -> 2\r\n                // For level 40, 31329 -> 2\r\n                fgPath.value = generatePath(cells, margin);\r\n            };\r\n            generate();\r\n            vue.onUpdated(generate);\r\n            return function () { return vue.h('svg', {\r\n                width: props.size,\r\n                height: props.size,\r\n                'shape-rendering': \"crispEdges\",\r\n                xmlns: 'http://www.w3.org/2000/svg',\r\n                viewBox: \"0 0 \" + numCells.value + \" \" + numCells.value,\r\n            }, [\r\n                vue.h('path', {\r\n                    fill: props.background,\r\n                    d: \"M0,0 h\" + numCells.value + \"v\" + numCells.value + \"H0z\",\r\n                }),\r\n                vue.h('path', { fill: props.foreground, d: fgPath.value }),\r\n            ]); };\r\n        },\r\n    });\r\n    var QRCodeCanvas = vue.defineComponent({\r\n        name: 'QRCodeCanvas',\r\n        props: QRCodeProps,\r\n        setup: function (props) {\r\n            var canvasEl = vue.ref(null);\r\n            var generate = function () {\r\n                var value = props.value, level = props.level, size = props.size, margin = props.margin, background = props.background, foreground = props.foreground;\r\n                var cells = QRCode(value, level).modules;\r\n                var numCells = cells.length + margin * 2;\r\n                var canvas = canvasEl.value;\r\n                if (!canvas) {\r\n                    return;\r\n                }\r\n                var ctx = canvas.getContext('2d');\r\n                if (!ctx) {\r\n                    return;\r\n                }\r\n                var devicePixelRatio = window.devicePixelRatio || 1;\r\n                var scale = (size / numCells) * devicePixelRatio;\r\n                canvas.height = canvas.width = size * devicePixelRatio;\r\n                ctx.scale(scale, scale);\r\n                ctx.fillStyle = background;\r\n                ctx.fillRect(0, 0, numCells, numCells);\r\n                ctx.fillStyle = foreground;\r\n                if (SUPPORTS_PATH2D) {\r\n                    ctx.fill(new Path2D(generatePath(cells, margin)));\r\n                }\r\n                else {\r\n                    cells.forEach(function (row, rdx) {\r\n                        row.forEach(function (cell, cdx) {\r\n                            if (cell) {\r\n                                ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            };\r\n            vue.onMounted(generate);\r\n            vue.onUpdated(generate);\r\n            return function () { return vue.h('canvas', {\r\n                ref: canvasEl,\r\n                style: { width: props.size + \"px\", height: props.size + \"px\" },\r\n            }); };\r\n        },\r\n    });\r\n    var QrcodeVue = vue.defineComponent({\r\n        name: 'Qrcode',\r\n        render: function () {\r\n            var _a = this.$props, renderAs = _a.renderAs, value = _a.value, _size = _a.size, _margin = _a.margin, _level = _a.level, background = _a.background, foreground = _a.foreground;\r\n            var size = _size >>> 0;\r\n            var margin = _margin >>> 0;\r\n            var level = validErrorCorrectLevel(_level) ? _level : defaultErrorCorrectLevel;\r\n            return vue.h(renderAs === 'svg' ? QRCodeSvg : QRCodeCanvas, { value: value, size: size, margin: margin, level: level, background: background, foreground: foreground });\r\n        },\r\n        props: QRCodeVueProps,\r\n    });\n\n    return QrcodeVue;\n\n}));\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,UAAUA,MAAV,EAAkBC,OAAlB,EAA2B;EACxB,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,CAACG,OAAO,CAAC,KAAD,CAAR,CAAvF,GACA,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAAC,CAAC,KAAD,CAAD,EAAUJ,OAAV,CAAnD,IACCD,MAAM,GAAG,OAAOO,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiDP,MAAM,IAAIQ,IAApE,EAA0ER,MAAM,CAACS,SAAP,GAAmBR,OAAO,CAACD,MAAM,CAACU,GAAR,CADrG,CADA;AAGH,CAJD,EAIG,IAJH,EAIU,UAAUC,GAAV,EAAe;EAAE;EAEvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAII,IAAIC,QAAQ,GAAG,YAAW;IACtBA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,SAASF,QAAT,CAAkBG,CAAlB,EAAqB;MAC7C,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;QACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;QACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;MACpE;;MACD,OAAON,CAAP;IACH,CAND;;IAOA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;EACH,CATD;;EAWA,IAAIO,MAAM,GAAG;IACZC,WAAW,EAAI,KAAK,CADR;IAEZC,cAAc,EAAI,KAAK,CAFX;IAGZC,cAAc,EAAI,KAAK,CAHX;IAIZC,UAAU,EAAI,KAAK;EAJP,CAAb;EAOA,IAAIC,IAAI,GAAGL,MAAX;;EAEA,SAASM,UAAT,CAAoBC,IAApB,EAA0B;IACzB,KAAKF,IAAL,GAAYA,IAAI,CAACF,cAAjB;IACA,KAAKI,IAAL,GAAYA,IAAZ;EACA;;EAEDD,UAAU,CAACV,SAAX,GAAuB;IAEtBY,SAAS,EAAG,UAASC,MAAT,EAAiB;MAC5B,OAAO,KAAKF,IAAL,CAAUb,MAAjB;IACA,CAJqB;IAMtBgB,KAAK,EAAG,UAASD,MAAT,EAAiB;MACxB,KAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgB,IAAL,CAAUb,MAA9B,EAAsCH,CAAC,EAAvC,EAA2C;QAC1C;QACAkB,MAAM,CAACE,GAAP,CAAW,KAAKJ,IAAL,CAAUK,UAAV,CAAqBrB,CAArB,CAAX,EAAoC,CAApC;MACA;IACD;EAXqB,CAAvB;EAcA,IAAIsB,SAAS,GAAGP,UAAhB;EAEA,IAAIQ,iBAAiB,GAAG;IACvBC,CAAC,EAAG,CADmB;IAEvBC,CAAC,EAAG,CAFmB;IAGvBC,CAAC,EAAG,CAHmB;IAIvBC,CAAC,EAAG;EAJmB,CAAxB,CA1DqB,CAiErB;;EACA,IAAIC,GAAG,GAAGL,iBAAV;;EAEA,SAASM,SAAT,CAAmBC,UAAnB,EAA+BC,SAA/B,EAA0C;IACzC,KAAKD,UAAL,GAAkBA,UAAlB;IACA,KAAKC,SAAL,GAAkBA,SAAlB;EACA;;EAEDF,SAAS,CAACG,cAAV,GAA2B,CAE1B;EACA;EACA;EACA;EAEA;EACA,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAR0B,EAS1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAT0B,EAU1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAV0B,EAW1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAX0B,EAa1B;EACA,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAd0B,EAe1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAf0B,EAgB1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAhB0B,EAiB1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAjB0B,EAmB1B;EACA,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CApB0B,EAqB1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CArB0B,EAsB1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAtB0B,EAuB1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAvB0B,EAyB1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CA1B0B,EA2B1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CA3B0B,EA4B1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CA5B0B,EA6B1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CA7B0B,EA+B1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CAhC0B,EAiC1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAjC0B,EAkC1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAlC0B,EAmC1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAnC0B,EAqC1B;EACA,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAtC0B,EAuC1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAvC0B,EAwC1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAxC0B,EAyC1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAzC0B,EA2C1B;EACA,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CA5C0B,EA6C1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CA7C0B,EA8C1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA9C0B,EA+C1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA/C0B,EAiD1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAlD0B,EAmD1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAnD0B,EAoD1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CApD0B,EAqD1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CArD0B,EAuD1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CAxD0B,EAyD1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAzD0B,EA0D1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA1D0B,EA2D1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA3D0B,EA6D1B;EACA,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA9D0B,EA+D1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA/D0B,EAgE1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAhE0B,EAiE1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAjE0B,EAmE1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CApE0B,EAqE1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CArE0B,EAsE1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAtE0B,EAuE1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAvE0B,EAyE1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,EAAgB,GAAhB,EAAqB,EAArB,CA1E0B,EA2E1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA3E0B,EA4E1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA5E0B,EA6E1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA7E0B,EA+E1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CAhF0B,EAiF1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAjF0B,EAkF1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAlF0B,EAmF1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAnF0B,EAqF1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAtF0B,EAuF1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAvF0B,EAwF1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAxF0B,EAyF1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAzF0B,EA2F1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,EAAgB,GAAhB,EAAqB,EAArB,CA5F0B,EA6F1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA7F0B,EA8F1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA9F0B,EA+F1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CA/F0B,EAiG1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,EAAgB,GAAhB,EAAqB,EAArB,CAlG0B,EAmG1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CAnG0B,EAoG1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CApG0B,EAqG1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CArG0B,EAuG1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAxG0B,EAyG1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAzG0B,EA0G1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA1G0B,EA2G1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA3G0B,EA6G1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CA9G0B,EA+G1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,CA/G0B,EAgH1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAhH0B,EAiH1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CAjH0B,EAmH1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CApH0B,EAqH1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CArH0B,EAsH1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAtH0B,EAuH1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CAvH0B,EAyH1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CA1H0B,EA2H1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA3H0B,EA4H1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CA5H0B,EA6H1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA7H0B,EA+H1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAhI0B,EAiI1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAjI0B,EAkI1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAlI0B,EAmI1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAnI0B,EAqI1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAtI0B,EAuI1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAvI0B,EAwI1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CAxI0B,EAyI1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAzI0B,EA2I1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CA5I0B,EA6I1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA7I0B,EA8I1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA9I0B,EA+I1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA/I0B,EAiJ1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAlJ0B,EAmJ1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CAnJ0B,EAoJ1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CApJ0B,EAqJ1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CArJ0B,EAuJ1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAxJ0B,EAyJ1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CAzJ0B,EA0J1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA1J0B,EA2J1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA3J0B,EA6J1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,CA9J0B,EA+J1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CA/J0B,EAgK1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAhK0B,EAiK1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAjK0B,EAmK1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CApK0B,EAqK1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CArK0B,EAsK1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CAtK0B,EAuK1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAvK0B,EAyK1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,EAAd,EAAkB,GAAlB,EAAuB,GAAvB,CA1K0B,EA2K1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA3K0B,EA4K1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA5K0B,EA6K1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA7K0B,EA+K1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAhL0B,EAiL1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAjL0B,EAkL1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CAlL0B,EAmL1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAnL0B,EAqL1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,EAAd,EAAkB,GAAlB,EAAuB,GAAvB,CAtL0B,EAuL1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAvL0B,EAwL1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAxL0B,EAyL1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAzL0B,EA2L1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,CA5L0B,EA6L1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA7L0B,EA8L1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CA9L0B,EA+L1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA/L0B,EAiM1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,CAlM0B,EAmM1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAnM0B,EAoM1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CApM0B,EAqM1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CArM0B,EAuM1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,CAxM0B,EAyM1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAzM0B,EA0M1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA1M0B,EA2M1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA3M0B,EA6M1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,CA9M0B,EA+M1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA/M0B,EAgN1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAhN0B,EAiN1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CAjN0B,EAmN1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,CApN0B,EAqN1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CArN0B,EAsN1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAtN0B,EAuN1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAvN0B,EAyN1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,EAAd,EAAkB,GAAlB,EAAuB,GAAvB,CA1N0B,EA2N1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA3N0B,EA4N1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA5N0B,EA6N1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,CA7N0B,EA+N1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,CAhO0B,EAiO1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAjO0B,EAkO1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAlO0B,EAmO1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAnO0B,EAqO1B;EACA,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,EAAd,EAAkB,GAAlB,EAAuB,GAAvB,CAtO0B,EAuO1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAvO0B,EAwO1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAxO0B,EAyO1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAzO0B,EA2O1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,CA5O0B,EA6O1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,CA7O0B,EA8O1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA9O0B,EA+O1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CA/O0B,EAiP1B;EACA,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,CAlP0B,EAmP1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAnP0B,EAoP1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CApP0B,EAqP1B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CArP0B,CAA3B;;EAwPAH,SAAS,CAACI,WAAV,GAAwB,UAASC,UAAT,EAAqBC,iBAArB,EAAwC;IAE/D,IAAIC,OAAO,GAAGP,SAAS,CAACQ,eAAV,CAA0BH,UAA1B,EAAsCC,iBAAtC,CAAd;;IAEA,IAAIC,OAAO,IAAIE,SAAf,EAA0B;MACzB,MAAM,IAAIC,KAAJ,CAAU,+BAA+BL,UAA/B,GAA4C,qBAA5C,GAAoEC,iBAA9E,CAAN;IACA;;IAED,IAAIhC,MAAM,GAAGiC,OAAO,CAACjC,MAAR,GAAiB,CAA9B;IAEA,IAAIqC,IAAI,GAAG,IAAIC,KAAJ,EAAX;;IAEA,KAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,MAApB,EAA4BH,CAAC,EAA7B,EAAiC;MAEhC,IAAI0C,KAAK,GAAGN,OAAO,CAACpC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAnB;MACA,IAAI8B,UAAU,GAAGM,OAAO,CAACpC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAxB;MACA,IAAI+B,SAAS,GAAIK,OAAO,CAACpC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAxB;;MAEA,KAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;QAC/BH,IAAI,CAACI,IAAL,CAAU,IAAIf,SAAJ,CAAcC,UAAd,EAA0BC,SAA1B,CAAV;MACA;IACD;;IAED,OAAOS,IAAP;EACA,CAxBD;;EA0BAX,SAAS,CAACQ,eAAV,GAA4B,UAASH,UAAT,EAAqBC,iBAArB,EAAwC;IAEnE,QAAOA,iBAAP;MACA,KAAKP,GAAG,CAACJ,CAAT;QACC,OAAOK,SAAS,CAACG,cAAV,CAAyB,CAACE,UAAU,GAAG,CAAd,IAAmB,CAAnB,GAAuB,CAAhD,CAAP;;MACD,KAAKN,GAAG,CAACH,CAAT;QACC,OAAOI,SAAS,CAACG,cAAV,CAAyB,CAACE,UAAU,GAAG,CAAd,IAAmB,CAAnB,GAAuB,CAAhD,CAAP;;MACD,KAAKN,GAAG,CAACF,CAAT;QACC,OAAOG,SAAS,CAACG,cAAV,CAAyB,CAACE,UAAU,GAAG,CAAd,IAAmB,CAAnB,GAAuB,CAAhD,CAAP;;MACD,KAAKN,GAAG,CAACD,CAAT;QACC,OAAOE,SAAS,CAACG,cAAV,CAAyB,CAACE,UAAU,GAAG,CAAd,IAAmB,CAAnB,GAAuB,CAAhD,CAAP;;MACD;QACC,OAAOI,SAAP;IAVD;EAYA,CAdD;;EAgBA,IAAIO,SAAS,GAAGhB,SAAhB;;EAEA,SAASiB,WAAT,GAAuB;IACtB,KAAK5B,MAAL,GAAc,IAAIuB,KAAJ,EAAd;IACA,KAAKtC,MAAL,GAAc,CAAd;EACA;;EAED2C,WAAW,CAACzC,SAAZ,GAAwB;IAEvB0C,GAAG,EAAG,UAASC,KAAT,EAAgB;MACrB,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,CAAnB,CAAf;MACA,OAAO,CAAG,KAAK9B,MAAL,CAAY+B,QAAZ,MAA2B,IAAID,KAAK,GAAG,CAAxC,GAA+C,CAAjD,KAAuD,CAA9D;IACA,CALsB;IAOvB5B,GAAG,EAAG,UAASgC,GAAT,EAAcjD,MAAd,EAAsB;MAC3B,KAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,MAApB,EAA4BH,CAAC,EAA7B,EAAiC;QAChC,KAAKqD,MAAL,CAAa,CAAGD,GAAG,KAAMjD,MAAM,GAAGH,CAAT,GAAa,CAAvB,GAA8B,CAAhC,KAAsC,CAAnD;MACA;IACD,CAXsB;IAavBsD,eAAe,EAAG,YAAW;MAC5B,OAAO,KAAKnD,MAAZ;IACA,CAfsB;IAiBvBkD,MAAM,EAAG,UAASE,GAAT,EAAc;MAEtB,IAAIN,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKhD,MAAL,GAAc,CAAzB,CAAf;;MACA,IAAI,KAAKe,MAAL,CAAYf,MAAZ,IAAsB8C,QAA1B,EAAoC;QACnC,KAAK/B,MAAL,CAAY0B,IAAZ,CAAiB,CAAjB;MACA;;MAED,IAAIW,GAAJ,EAAS;QACR,KAAKrC,MAAL,CAAY+B,QAAZ,KAA0B,SAAU,KAAK9C,MAAL,GAAc,CAAlD;MACA;;MAED,KAAKA,MAAL;IACA;EA7BsB,CAAxB;EAgCA,IAAIqD,WAAW,GAAGV,WAAlB;EAEA,IAAIW,MAAM,GAAG;IAEZC,IAAI,EAAG,UAASzD,CAAT,EAAY;MAElB,IAAIA,CAAC,GAAG,CAAR,EAAW;QACV,MAAM,IAAIsC,KAAJ,CAAU,UAAUtC,CAAV,GAAc,GAAxB,CAAN;MACA;;MAED,OAAOwD,MAAM,CAACE,SAAP,CAAiB1D,CAAjB,CAAP;IACA,CATW;IAWZ2D,IAAI,EAAG,UAAS3D,CAAT,EAAY;MAElB,OAAOA,CAAC,GAAG,CAAX,EAAc;QACbA,CAAC,IAAI,GAAL;MACA;;MAED,OAAOA,CAAC,IAAI,GAAZ,EAAiB;QAChBA,CAAC,IAAI,GAAL;MACA;;MAED,OAAOwD,MAAM,CAACI,SAAP,CAAiB5D,CAAjB,CAAP;IACA,CAtBW;IAwBZ4D,SAAS,EAAG,IAAIpB,KAAJ,CAAU,GAAV,CAxBA;IA0BZkB,SAAS,EAAG,IAAIlB,KAAJ,CAAU,GAAV;EA1BA,CAAb;;EA8BA,KAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IAC3ByD,MAAM,CAACI,SAAP,CAAiB7D,CAAjB,IAAsB,KAAKA,CAA3B;EACA;;EACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;IAC7ByD,MAAM,CAACI,SAAP,CAAiB7D,CAAjB,IAAsByD,MAAM,CAACI,SAAP,CAAiB7D,CAAC,GAAG,CAArB,IACnByD,MAAM,CAACI,SAAP,CAAiB7D,CAAC,GAAG,CAArB,CADmB,GAEnByD,MAAM,CAACI,SAAP,CAAiB7D,CAAC,GAAG,CAArB,CAFmB,GAGnByD,MAAM,CAACI,SAAP,CAAiB7D,CAAC,GAAG,CAArB,CAHH;EAIA;;EACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;IAC7ByD,MAAM,CAACE,SAAP,CAAiBF,MAAM,CAACI,SAAP,CAAiB7D,CAAjB,CAAjB,IAAyCA,CAAzC;EACA;;EAED,IAAI8D,MAAM,GAAGL,MAAb;EAEA,IAAIM,MAAM,GAAGD,MAAb;;EAEA,SAASE,YAAT,CAAsBZ,GAAtB,EAA2Ba,KAA3B,EAAkC;IAEjC,IAAIb,GAAG,CAACjD,MAAJ,IAAcmC,SAAlB,EAA6B;MAC5B,MAAM,IAAIC,KAAJ,CAAUa,GAAG,CAACjD,MAAJ,GAAa,GAAb,GAAmB8D,KAA7B,CAAN;IACA;;IAED,IAAIC,MAAM,GAAG,CAAb;;IAEA,OAAOA,MAAM,GAAGd,GAAG,CAACjD,MAAb,IAAuBiD,GAAG,CAACc,MAAD,CAAH,IAAe,CAA7C,EAAgD;MAC/CA,MAAM;IACN;;IAED,KAAKd,GAAL,GAAW,IAAIX,KAAJ,CAAUW,GAAG,CAACjD,MAAJ,GAAa+D,MAAb,GAAsBD,KAAhC,CAAX;;IACA,KAAK,IAAIjE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoD,GAAG,CAACjD,MAAJ,GAAa+D,MAAjC,EAAyClE,CAAC,EAA1C,EAA8C;MAC7C,KAAKoD,GAAL,CAASpD,CAAT,IAAcoD,GAAG,CAACpD,CAAC,GAAGkE,MAAL,CAAjB;IACA;EACD;;EAEDF,YAAY,CAAC3D,SAAb,GAAyB;IAExB0C,GAAG,EAAG,UAASC,KAAT,EAAgB;MACrB,OAAO,KAAKI,GAAL,CAASJ,KAAT,CAAP;IACA,CAJuB;IAMxB/B,SAAS,EAAG,YAAW;MACtB,OAAO,KAAKmC,GAAL,CAASjD,MAAhB;IACA,CARuB;IAUxBgE,QAAQ,EAAG,UAASC,CAAT,EAAY;MAEtB,IAAIhB,GAAG,GAAG,IAAIX,KAAJ,CAAU,KAAKxB,SAAL,KAAmBmD,CAAC,CAACnD,SAAF,EAAnB,GAAmC,CAA7C,CAAV;;MAEA,KAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiB,SAAL,EAApB,EAAsCjB,CAAC,EAAvC,EAA2C;QAC1C,KAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,CAAC,CAACnD,SAAF,EAApB,EAAmC0B,CAAC,EAApC,EAAwC;UACvCS,GAAG,CAACpD,CAAC,GAAG2C,CAAL,CAAH,IAAcoB,MAAM,CAACH,IAAP,CAAYG,MAAM,CAACL,IAAP,CAAY,KAAKX,GAAL,CAAS/C,CAAT,CAAZ,IAA4B+D,MAAM,CAACL,IAAP,CAAYU,CAAC,CAACrB,GAAF,CAAMJ,CAAN,CAAZ,CAAxC,CAAd;QACA;MACD;;MAED,OAAO,IAAIqB,YAAJ,CAAiBZ,GAAjB,EAAsB,CAAtB,CAAP;IACA,CArBuB;IAuBxBiB,GAAG,EAAG,UAASD,CAAT,EAAY;MAEjB,IAAI,KAAKnD,SAAL,KAAmBmD,CAAC,CAACnD,SAAF,EAAnB,GAAmC,CAAvC,EAA0C;QACzC,OAAO,IAAP;MACA;;MAED,IAAIqD,KAAK,GAAGP,MAAM,CAACL,IAAP,CAAY,KAAKX,GAAL,CAAS,CAAT,CAAZ,IAA4BgB,MAAM,CAACL,IAAP,CAAYU,CAAC,CAACrB,GAAF,CAAM,CAAN,CAAZ,CAAxC;MAEA,IAAIK,GAAG,GAAG,IAAIX,KAAJ,CAAU,KAAKxB,SAAL,EAAV,CAAV;;MAEA,KAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiB,SAAL,EAApB,EAAsCjB,CAAC,EAAvC,EAA2C;QAC1CoD,GAAG,CAACpD,CAAD,CAAH,GAAS,KAAK+C,GAAL,CAAS/C,CAAT,CAAT;MACA;;MAED,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoE,CAAC,CAACnD,SAAF,EAApB,EAAmCjB,CAAC,EAApC,EAAwC;QACvCoD,GAAG,CAACpD,CAAD,CAAH,IAAU+D,MAAM,CAACH,IAAP,CAAYG,MAAM,CAACL,IAAP,CAAYU,CAAC,CAACrB,GAAF,CAAM/C,CAAN,CAAZ,IAAyBsE,KAArC,CAAV;MACA,CAhBgB,CAkBjB;;;MACA,OAAO,IAAIN,YAAJ,CAAiBZ,GAAjB,EAAsB,CAAtB,EAAyBiB,GAAzB,CAA6BD,CAA7B,CAAP;IACA;EA3CuB,CAAzB;EA8CA,IAAIG,YAAY,GAAGP,YAAnB;EAEA,IAAIQ,IAAI,GAAG/D,MAAX;EACA,IAAIgE,YAAY,GAAGF,YAAnB;EACA,IAAIG,IAAI,GAAGZ,MAAX;EAEA,IAAIa,aAAa,GAAG;IACnBC,UAAU,EAAG,CADM;IAEnBC,UAAU,EAAG,CAFM;IAGnBC,UAAU,EAAG,CAHM;IAInBC,UAAU,EAAG,CAJM;IAKnBC,UAAU,EAAG,CALM;IAMnBC,UAAU,EAAG,CANM;IAOnBC,UAAU,EAAG,CAPM;IAQnBC,UAAU,EAAG;EARM,CAApB;EAWA,IAAIC,MAAM,GAAG;IAETC,sBAAsB,EAAG,CACxB,EADwB,EAExB,CAAC,CAAD,EAAI,EAAJ,CAFwB,EAGxB,CAAC,CAAD,EAAI,EAAJ,CAHwB,EAIxB,CAAC,CAAD,EAAI,EAAJ,CAJwB,EAKxB,CAAC,CAAD,EAAI,EAAJ,CALwB,EAMxB,CAAC,CAAD,EAAI,EAAJ,CANwB,EAOxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAPwB,EAQxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CARwB,EASxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CATwB,EAUxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAVwB,EAWxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAXwB,EAYxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAZwB,EAaxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAbwB,EAcxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAdwB,EAexB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAfwB,EAgBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAhBwB,EAiBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAjBwB,EAkBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAlBwB,EAmBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAnBwB,EAoBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CApBwB,EAqBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,CArBwB,EAsBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,CAtBwB,EAuBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,CAvBwB,EAwBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,CAxBwB,EAyBxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,CAzBwB,EA0BxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,CA1BwB,EA2BxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,CA3BwB,EA4BxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,GAApB,CA5BwB,EA6BxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,CA7BwB,EA8BxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,CA9BwB,EA+BxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,CA/BwB,EAgCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,CAhCwB,EAiCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,CAjCwB,EAkCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,CAlCwB,EAmCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAnCwB,EAoCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CApCwB,EAqCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CArCwB,EAsCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAtCwB,EAuCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAvCwB,EAwCxB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAxCwB,CAFhB;IA6CTC,GAAG,EAAI,KAAK,EAAN,GAAa,KAAK,CAAlB,GAAwB,KAAK,CAA7B,GAAmC,KAAK,CAAxC,GAA8C,KAAK,CAAnD,GAAyD,KAAK,CAA9D,GAAoE,KAAK,CA7CtE;IA8CTC,GAAG,EAAI,KAAK,EAAN,GAAa,KAAK,EAAlB,GAAyB,KAAK,EAA9B,GAAqC,KAAK,CAA1C,GAAgD,KAAK,CAArD,GAA2D,KAAK,CAAhE,GAAsE,KAAK,CAA3E,GAAiF,KAAK,CA9CnF;IA+CTC,QAAQ,EAAI,KAAK,EAAN,GAAa,KAAK,EAAlB,GAAyB,KAAK,EAA9B,GAAqC,KAAK,CAA1C,GAAgD,KAAK,CA/CvD;IAiDTC,cAAc,EAAG,UAASzE,IAAT,EAAe;MAC/B,IAAI0E,CAAC,GAAG1E,IAAI,IAAI,EAAhB;;MACA,OAAOoE,MAAM,CAACO,WAAP,CAAmBD,CAAnB,IAAwBN,MAAM,CAACO,WAAP,CAAmBP,MAAM,CAACE,GAA1B,CAAxB,IAA0D,CAAjE,EAAoE;QACnEI,CAAC,IAAKN,MAAM,CAACE,GAAP,IAAeF,MAAM,CAACO,WAAP,CAAmBD,CAAnB,IAAwBN,MAAM,CAACO,WAAP,CAAmBP,MAAM,CAACE,GAA1B,CAA7C;MACA;;MACD,OAAO,CAAGtE,IAAI,IAAI,EAAT,GAAe0E,CAAjB,IAAsBN,MAAM,CAACI,QAApC;IACA,CAvDQ;IAyDTI,gBAAgB,EAAG,UAAS5E,IAAT,EAAe;MACjC,IAAI0E,CAAC,GAAG1E,IAAI,IAAI,EAAhB;;MACA,OAAOoE,MAAM,CAACO,WAAP,CAAmBD,CAAnB,IAAwBN,MAAM,CAACO,WAAP,CAAmBP,MAAM,CAACG,GAA1B,CAAxB,IAA0D,CAAjE,EAAoE;QACnEG,CAAC,IAAKN,MAAM,CAACG,GAAP,IAAeH,MAAM,CAACO,WAAP,CAAmBD,CAAnB,IAAwBN,MAAM,CAACO,WAAP,CAAmBP,MAAM,CAACG,GAA1B,CAA7C;MACA;;MACD,OAAQvE,IAAI,IAAI,EAAT,GAAe0E,CAAtB;IACA,CA/DQ;IAiETC,WAAW,EAAG,UAAS3E,IAAT,EAAe;MAE5B,IAAI6E,KAAK,GAAG,CAAZ;;MAEA,OAAO7E,IAAI,IAAI,CAAf,EAAkB;QACjB6E,KAAK;QACL7E,IAAI,MAAM,CAAV;MACA;;MAED,OAAO6E,KAAP;IACA,CA3EQ;IA6ETC,kBAAkB,EAAG,UAAS5D,UAAT,EAAqB;MACzC,OAAOkD,MAAM,CAACC,sBAAP,CAA8BnD,UAAU,GAAG,CAA3C,CAAP;IACA,CA/EQ;IAiFT6D,OAAO,EAAG,UAASC,WAAT,EAAsBhG,CAAtB,EAAyB2C,CAAzB,EAA4B;MAErC,QAAQqD,WAAR;QAEA,KAAKrB,aAAa,CAACC,UAAnB;UAAgC,OAAO,CAAC5E,CAAC,GAAG2C,CAAL,IAAU,CAAV,IAAe,CAAtB;;QAChC,KAAKgC,aAAa,CAACE,UAAnB;UAAgC,OAAO7E,CAAC,GAAG,CAAJ,IAAS,CAAhB;;QAChC,KAAK2E,aAAa,CAACG,UAAnB;UAAgC,OAAOnC,CAAC,GAAG,CAAJ,IAAS,CAAhB;;QAChC,KAAKgC,aAAa,CAACI,UAAnB;UAAgC,OAAO,CAAC/E,CAAC,GAAG2C,CAAL,IAAU,CAAV,IAAe,CAAtB;;QAChC,KAAKgC,aAAa,CAACK,UAAnB;UAAgC,OAAO,CAAC9B,IAAI,CAACC,KAAL,CAAWnD,CAAC,GAAG,CAAf,IAAoBkD,IAAI,CAACC,KAAL,CAAWR,CAAC,GAAG,CAAf,CAArB,IAA2C,CAA3C,IAAgD,CAAvD;;QAChC,KAAKgC,aAAa,CAACM,UAAnB;UAAgC,OAAQjF,CAAC,GAAG2C,CAAL,GAAU,CAAV,GAAe3C,CAAC,GAAG2C,CAAL,GAAU,CAAxB,IAA6B,CAApC;;QAChC,KAAKgC,aAAa,CAACO,UAAnB;UAAgC,OAAO,CAAGlF,CAAC,GAAG2C,CAAL,GAAU,CAAV,GAAe3C,CAAC,GAAG2C,CAAL,GAAU,CAA1B,IAA+B,CAA/B,IAAoC,CAA3C;;QAChC,KAAKgC,aAAa,CAACQ,UAAnB;UAAgC,OAAO,CAAGnF,CAAC,GAAG2C,CAAL,GAAU,CAAV,GAAc,CAAC3C,CAAC,GAAG2C,CAAL,IAAU,CAA1B,IAA+B,CAA/B,IAAoC,CAA3C;;QAEhC;UACC,MAAM,IAAIJ,KAAJ,CAAU,qBAAqByD,WAA/B,CAAN;MAZD;IAcA,CAjGQ;IAmGTC,yBAAyB,EAAG,UAASC,kBAAT,EAA6B;MAExD,IAAIC,CAAC,GAAG,IAAI1B,YAAJ,CAAiB,CAAC,CAAD,CAAjB,EAAsB,CAAtB,CAAR;;MAEA,KAAK,IAAIzE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkG,kBAApB,EAAwClG,CAAC,EAAzC,EAA6C;QAC5CmG,CAAC,GAAGA,CAAC,CAAChC,QAAF,CAAW,IAAIM,YAAJ,CAAiB,CAAC,CAAD,EAAIC,IAAI,CAACd,IAAL,CAAU5D,CAAV,CAAJ,CAAjB,EAAoC,CAApC,CAAX,CAAJ;MACA;;MAED,OAAOmG,CAAP;IACA,CA5GQ;IA8GT7C,eAAe,EAAG,UAASxC,IAAT,EAAesF,IAAf,EAAqB;MAEtC,IAAI,KAAKA,IAAL,IAAaA,IAAI,GAAG,EAAxB,EAA4B;QAE3B;QAEA,QAAOtF,IAAP;UACA,KAAK0D,IAAI,CAAC9D,WAAV;YAAyB,OAAO,EAAP;;UACzB,KAAK8D,IAAI,CAAC7D,cAAV;YAA4B,OAAO,CAAP;;UAC5B,KAAK6D,IAAI,CAAC5D,cAAV;YAA2B,OAAO,CAAP;;UAC3B,KAAK4D,IAAI,CAAC3D,UAAV;YAAyB,OAAO,CAAP;;UACzB;YACC,MAAM,IAAI0B,KAAJ,CAAU,UAAUzB,IAApB,CAAN;QAND;MASA,CAbD,MAaO,IAAIsF,IAAI,GAAG,EAAX,EAAe;QAErB;QAEA,QAAOtF,IAAP;UACA,KAAK0D,IAAI,CAAC9D,WAAV;YAAyB,OAAO,EAAP;;UACzB,KAAK8D,IAAI,CAAC7D,cAAV;YAA4B,OAAO,EAAP;;UAC5B,KAAK6D,IAAI,CAAC5D,cAAV;YAA2B,OAAO,EAAP;;UAC3B,KAAK4D,IAAI,CAAC3D,UAAV;YAAyB,OAAO,EAAP;;UACzB;YACC,MAAM,IAAI0B,KAAJ,CAAU,UAAUzB,IAApB,CAAN;QAND;MASA,CAbM,MAaA,IAAIsF,IAAI,GAAG,EAAX,EAAe;QAErB;QAEA,QAAOtF,IAAP;UACA,KAAK0D,IAAI,CAAC9D,WAAV;YAAyB,OAAO,EAAP;;UACzB,KAAK8D,IAAI,CAAC7D,cAAV;YAA2B,OAAO,EAAP;;UAC3B,KAAK6D,IAAI,CAAC5D,cAAV;YAA2B,OAAO,EAAP;;UAC3B,KAAK4D,IAAI,CAAC3D,UAAV;YAAyB,OAAO,EAAP;;UACzB;YACC,MAAM,IAAI0B,KAAJ,CAAU,UAAUzB,IAApB,CAAN;QAND;MASA,CAbM,MAaA;QACN,MAAM,IAAIyB,KAAJ,CAAU,UAAU6D,IAApB,CAAN;MACA;IACD,CA1JQ;IA4JTC,YAAY,EAAG,UAASC,MAAT,EAAiB;MAE/B,IAAIC,WAAW,GAAGD,MAAM,CAACE,cAAP,EAAlB;MAEA,IAAIC,SAAS,GAAG,CAAhB,CAJ+B,CAM/B;;MAEA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,WAAxB,EAAqCG,GAAG,EAAxC,EAA4C;QAE3C,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,WAAxB,EAAqCI,GAAG,EAAxC,EAA4C;UAE3C,IAAIC,SAAS,GAAG,CAAhB;UACA,IAAIC,IAAI,GAAGP,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAnB,CAAX;;UAEH,KAAK,IAAII,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;YAE1B,IAAIL,GAAG,GAAGK,CAAN,GAAU,CAAV,IAAeR,WAAW,IAAIG,GAAG,GAAGK,CAAxC,EAA2C;cAC1C;YACA;;YAED,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;cAE7B,IAAIL,GAAG,GAAGK,CAAN,GAAU,CAAV,IAAeT,WAAW,IAAII,GAAG,GAAGK,CAAxC,EAA2C;gBAC1C;cACA;;cAED,IAAID,CAAC,IAAI,CAAL,IAAUC,CAAC,IAAI,CAAnB,EAAsB;gBACrB;cACA;;cAED,IAAIH,IAAI,IAAIP,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAGK,CAApB,EAAuBJ,GAAG,GAAGK,CAA7B,CAAZ,EAA8C;gBAC7CJ,SAAS;cACT;YACD;UACD;;UAED,IAAIA,SAAS,GAAG,CAAhB,EAAmB;YAClBH,SAAS,IAAK,IAAIG,SAAJ,GAAgB,CAA9B;UACA;QACD;MACD,CAzC8B,CA2C/B;;;MAEA,KAAK,IAAIF,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,WAAW,GAAG,CAAtC,EAAyCG,GAAG,EAA5C,EAAgD;QAC/C,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,WAAW,GAAG,CAAtC,EAAyCI,GAAG,EAA5C,EAAgD;UAC/C,IAAIjE,KAAK,GAAG,CAAZ;UACA,IAAI4D,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAuBC,GAAvB,CAAJ,EAAsCjE,KAAK;UAC3C,IAAI4D,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAG,CAApB,EAAuBC,GAAvB,CAAJ,EAAsCjE,KAAK;UAC3C,IAAI4D,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAuBC,GAAG,GAAG,CAA7B,CAAJ,EAAsCjE,KAAK;UAC3C,IAAI4D,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAG,CAApB,EAAuBC,GAAG,GAAG,CAA7B,CAAJ,EAAsCjE,KAAK;;UAC3C,IAAIA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA3B,EAA8B;YAC7B+D,SAAS,IAAI,CAAb;UACA;QACD;MACD,CAxD8B,CA0D/B;;;MAEA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,WAAxB,EAAqCG,GAAG,EAAxC,EAA4C;QAC3C,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,WAAW,GAAG,CAAtC,EAAyCI,GAAG,EAA5C,EAAgD;UAC/C,IAAIL,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAnB,KACC,CAACL,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAG,GAAG,CAAzB,CADF,IAEEL,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAG,GAAG,CAAzB,CAFF,IAGEL,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAG,GAAG,CAAzB,CAHF,IAIEL,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAG,GAAG,CAAzB,CAJF,IAKC,CAACL,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAG,GAAG,CAAzB,CALF,IAMEL,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAG,GAAG,CAAzB,CANN,EAMoC;YACnCF,SAAS,IAAI,EAAb;UACA;QACD;MACD;;MAED,KAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,WAAxB,EAAqCI,GAAG,EAAxC,EAA4C;QAC3C,KAAK,IAAID,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,WAAW,GAAG,CAAtC,EAAyCG,GAAG,EAA5C,EAAgD;UAC/C,IAAIJ,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAnB,KACC,CAACL,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAG,CAApB,EAAuBC,GAAvB,CADF,IAEEL,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAG,CAApB,EAAuBC,GAAvB,CAFF,IAGEL,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAG,CAApB,EAAuBC,GAAvB,CAHF,IAIEL,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAG,CAApB,EAAuBC,GAAvB,CAJF,IAKC,CAACL,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAG,CAApB,EAAuBC,GAAvB,CALF,IAMEL,MAAM,CAACQ,MAAP,CAAcJ,GAAG,GAAG,CAApB,EAAuBC,GAAvB,CANN,EAMoC;YACnCF,SAAS,IAAI,EAAb;UACA;QACD;MACD,CAtF8B,CAwF/B;;;MAEA,IAAIQ,SAAS,GAAG,CAAhB;;MAEA,KAAK,IAAIN,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,WAAxB,EAAqCI,GAAG,EAAxC,EAA4C;QAC3C,KAAK,IAAID,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,WAAxB,EAAqCG,GAAG,EAAxC,EAA4C;UAC3C,IAAIJ,MAAM,CAACQ,MAAP,CAAcJ,GAAd,EAAmBC,GAAnB,CAAJ,EAA8B;YAC7BM,SAAS;UACT;QACD;MACD;;MAED,IAAI3C,KAAK,GAAGpB,IAAI,CAACgE,GAAL,CAAS,MAAMD,SAAN,GAAkBV,WAAlB,GAAgCA,WAAhC,GAA8C,EAAvD,IAA6D,CAAzE;MACAE,SAAS,IAAInC,KAAK,GAAG,EAArB;MAEA,OAAOmC,SAAP;IACA;EApQQ,CAAb;EAuQA,IAAIU,MAAM,GAAG/B,MAAb;EAEA,IAAIgC,OAAO,GAAG9F,SAAd;EACA,IAAI+F,OAAO,GAAGxE,SAAd;EACA,IAAIyE,SAAS,GAAG9D,WAAhB;EACA,IAAI+D,IAAI,GAAGJ,MAAX;EACA,IAAIK,UAAU,GAAGjD,YAAjB;;EAEA,SAASkD,QAAT,CAAkBvF,UAAlB,EAA8BC,iBAA9B,EAAiD;IAChD,KAAKD,UAAL,GAAkBA,UAAlB;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;IACA,KAAKuF,OAAL,GAAe,IAAf;IACA,KAAKnB,WAAL,GAAmB,CAAnB;IACA,KAAKoB,SAAL,GAAiB,IAAjB;IACA,KAAKC,QAAL,GAAgB,EAAhB;EACA,CA1yBoB,CA4yBrB;;;EACA,IAAIC,KAAK,GAAGJ,QAAQ,CAACpH,SAArB;;EAEAwH,KAAK,CAACC,OAAN,GAAgB,UAAS9G,IAAT,EAAe;IAC9B,IAAI+G,OAAO,GAAG,IAAIX,OAAJ,CAAYpG,IAAZ,CAAd;IACA,KAAK4G,QAAL,CAAchF,IAAd,CAAmBmF,OAAnB;IACA,KAAKJ,SAAL,GAAiB,IAAjB;EACA,CAJD;;EAMAE,KAAK,CAACf,MAAN,GAAe,UAASJ,GAAT,EAAcC,GAAd,EAAmB;IACjC,IAAID,GAAG,GAAG,CAAN,IAAW,KAAKH,WAAL,IAAoBG,GAA/B,IAAsCC,GAAG,GAAG,CAA5C,IAAiD,KAAKJ,WAAL,IAAoBI,GAAzE,EAA8E;MAC7E,MAAM,IAAIpE,KAAJ,CAAUmE,GAAG,GAAG,GAAN,GAAYC,GAAtB,CAAN;IACA;;IACD,OAAO,KAAKe,OAAL,CAAahB,GAAb,EAAkBC,GAAlB,CAAP;EACA,CALD;;EAOAkB,KAAK,CAACrB,cAAN,GAAuB,YAAW;IACjC,OAAO,KAAKD,WAAZ;EACA,CAFD;;EAIAsB,KAAK,CAACG,IAAN,GAAa,YAAW;IACvB;IACA,IAAI,KAAK9F,UAAL,GAAkB,CAAtB,EAAyB;MACxB,IAAIA,UAAU,GAAG,CAAjB;;MACA,KAAKA,UAAU,GAAG,CAAlB,EAAqBA,UAAU,GAAG,EAAlC,EAAsCA,UAAU,EAAhD,EAAoD;QACnD,IAAI+F,QAAQ,GAAGZ,OAAO,CAACpF,WAAR,CAAoBC,UAApB,EAAgC,KAAKC,iBAArC,CAAf;QAEA,IAAIjB,MAAM,GAAG,IAAIoG,SAAJ,EAAb;QACA,IAAIY,cAAc,GAAG,CAArB;;QACA,KAAK,IAAIlI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiI,QAAQ,CAAC9H,MAA7B,EAAqCH,CAAC,EAAtC,EAA0C;UACzCkI,cAAc,IAAID,QAAQ,CAACjI,CAAD,CAAR,CAAY+B,SAA9B;QACA;;QAED,KAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK4H,QAAL,CAAczH,MAAlC,EAA0CH,CAAC,EAA3C,EAA+C;UAC9C,IAAIgB,IAAI,GAAG,KAAK4G,QAAL,CAAc5H,CAAd,CAAX;UACAkB,MAAM,CAACE,GAAP,CAAWJ,IAAI,CAACF,IAAhB,EAAsB,CAAtB;UACAI,MAAM,CAACE,GAAP,CAAWJ,IAAI,CAACC,SAAL,EAAX,EAA6BsG,IAAI,CAACjE,eAAL,CAAqBtC,IAAI,CAACF,IAA1B,EAAgCoB,UAAhC,CAA7B;UACAlB,IAAI,CAACG,KAAL,CAAWD,MAAX;QACA;;QACD,IAAIA,MAAM,CAACoC,eAAP,MAA4B4E,cAAc,GAAG,CAAjD,EACC;MACD;;MACD,KAAKhG,UAAL,GAAkBA,UAAlB;IACA;;IACD,KAAKiG,QAAL,CAAc,KAAd,EAAqB,KAAKC,kBAAL,EAArB;EACA,CAzBD;;EA2BAP,KAAK,CAACM,QAAN,GAAiB,UAASE,IAAT,EAAerC,WAAf,EAA4B;IAE5C,KAAKO,WAAL,GAAmB,KAAKrE,UAAL,GAAkB,CAAlB,GAAsB,EAAzC;IACA,KAAKwF,OAAL,GAAe,IAAIjF,KAAJ,CAAU,KAAK8D,WAAf,CAAf;;IAEA,KAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKH,WAA7B,EAA0CG,GAAG,EAA7C,EAAiD;MAEhD,KAAKgB,OAAL,CAAahB,GAAb,IAAoB,IAAIjE,KAAJ,CAAU,KAAK8D,WAAf,CAApB;;MAEA,KAAK,IAAII,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKJ,WAA7B,EAA0CI,GAAG,EAA7C,EAAiD;QAChD,KAAKe,OAAL,CAAahB,GAAb,EAAkBC,GAAlB,IAAyB,IAAzB,CADgD,CAClB;MAC9B;IACD;;IAED,KAAK2B,yBAAL,CAA+B,CAA/B,EAAkC,CAAlC;IACA,KAAKA,yBAAL,CAA+B,KAAK/B,WAAL,GAAmB,CAAlD,EAAqD,CAArD;IACA,KAAK+B,yBAAL,CAA+B,CAA/B,EAAkC,KAAK/B,WAAL,GAAmB,CAArD;IACA,KAAKgC,0BAAL;IACA,KAAKC,kBAAL;IACA,KAAKC,aAAL,CAAmBJ,IAAnB,EAAyBrC,WAAzB;;IAEA,IAAI,KAAK9D,UAAL,IAAmB,CAAvB,EAA0B;MACzB,KAAKwG,eAAL,CAAqBL,IAArB;IACA;;IAED,IAAI,KAAKV,SAAL,IAAkB,IAAtB,EAA4B;MAC3B,KAAKA,SAAL,GAAiBF,QAAQ,CAACkB,UAAT,CAAoB,KAAKzG,UAAzB,EAAqC,KAAKC,iBAA1C,EAA6D,KAAKyF,QAAlE,CAAjB;IACA;;IAED,KAAKgB,OAAL,CAAa,KAAKjB,SAAlB,EAA6B3B,WAA7B;EACA,CA9BD;;EAgCA6B,KAAK,CAACS,yBAAN,GAAkC,UAAS5B,GAAT,EAAcC,GAAd,EAAoB;IAErD,KAAK,IAAII,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;MAE7B,IAAIL,GAAG,GAAGK,CAAN,IAAW,CAAC,CAAZ,IAAiB,KAAKR,WAAL,IAAoBG,GAAG,GAAGK,CAA/C,EAAkD;;MAElD,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;QAE7B,IAAIL,GAAG,GAAGK,CAAN,IAAW,CAAC,CAAZ,IAAiB,KAAKT,WAAL,IAAoBI,GAAG,GAAGK,CAA/C,EAAkD;;QAElD,IAAM,KAAKD,CAAL,IAAUA,CAAC,IAAI,CAAf,KAAqBC,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAApC,CAAD,IACC,KAAKA,CAAL,IAAUA,CAAC,IAAI,CAAf,KAAqBD,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAApC,CADD,IAEC,KAAKA,CAAL,IAAUA,CAAC,IAAI,CAAf,IAAoB,KAAKC,CAAzB,IAA8BA,CAAC,IAAI,CAFzC,EAE8C;UAC7C,KAAKU,OAAL,CAAahB,GAAG,GAAGK,CAAnB,EAAsBJ,GAAG,GAAGK,CAA5B,IAAiC,IAAjC;QACA,CAJD,MAIO;UACN,KAAKU,OAAL,CAAahB,GAAG,GAAGK,CAAnB,EAAsBJ,GAAG,GAAGK,CAA5B,IAAiC,KAAjC;QACA;MACD;IACD;EACD,CAnBD;;EAqBAa,KAAK,CAACO,kBAAN,GAA2B,YAAW;IAErC,IAAIS,YAAY,GAAG,CAAnB;IACA,IAAIC,OAAO,GAAG,CAAd;;IAEA,KAAK,IAAI9I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAE3B,KAAKmI,QAAL,CAAc,IAAd,EAAoBnI,CAApB;MAEA,IAAIyG,SAAS,GAAGc,IAAI,CAAClB,YAAL,CAAkB,IAAlB,CAAhB;;MAEA,IAAIrG,CAAC,IAAI,CAAL,IAAU6I,YAAY,GAAIpC,SAA9B,EAAyC;QACxCoC,YAAY,GAAGpC,SAAf;QACAqC,OAAO,GAAG9I,CAAV;MACA;IACD;;IAED,OAAO8I,OAAP;EACA,CAlBD;;EAoBAjB,KAAK,CAACkB,eAAN,GAAwB,UAASC,SAAT,EAAoBC,aAApB,EAAmCC,KAAnC,EAA0C;IAEjE,IAAIC,KAAK,GAAGH,SAAS,CAACI,oBAAV,CAA+BH,aAA/B,EAA8CC,KAA9C,CAAZ;IACA,IAAIG,EAAE,GAAG,CAAT;IAEA,KAAKrB,IAAL;;IAEA,KAAK,IAAItB,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKgB,OAAL,CAAavH,MAArC,EAA6CuG,GAAG,EAAhD,EAAoD;MAEnD,IAAI4C,CAAC,GAAG5C,GAAG,GAAG2C,EAAd;;MAEA,KAAK,IAAI1C,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKe,OAAL,CAAahB,GAAb,EAAkBvG,MAA1C,EAAkDwG,GAAG,EAArD,EAAyD;QAExD,IAAI4C,CAAC,GAAG5C,GAAG,GAAG0C,EAAd;QACA,IAAIxC,IAAI,GAAG,KAAKa,OAAL,CAAahB,GAAb,EAAkBC,GAAlB,CAAX;;QAEA,IAAIE,IAAJ,EAAU;UACTsC,KAAK,CAACK,SAAN,CAAgB,CAAhB,EAAmB,GAAnB;UACAL,KAAK,CAACM,MAAN,CAAaF,CAAb,EAAgBD,CAAhB;UACAH,KAAK,CAACO,MAAN,CAAaH,CAAC,GAAGF,EAAjB,EAAqBC,CAArB;UACAH,KAAK,CAACO,MAAN,CAAaH,CAAC,GAAGF,EAAjB,EAAqBC,CAAC,GAAGD,EAAzB;UACAF,KAAK,CAACO,MAAN,CAAaH,CAAb,EAAgBD,CAAC,GAAGD,EAApB;UACAF,KAAK,CAACQ,OAAN;QACA;MACD;IACD;;IAED,OAAOR,KAAP;EACA,CA5BD;;EA8BAtB,KAAK,CAACW,kBAAN,GAA2B,YAAW;IAErC,KAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,WAAL,GAAmB,CAAvC,EAA0CQ,CAAC,EAA3C,EAA+C;MAC9C,IAAI,KAAKW,OAAL,CAAaX,CAAb,EAAgB,CAAhB,KAAsB,IAA1B,EAAgC;QAC/B;MACA;;MACD,KAAKW,OAAL,CAAaX,CAAb,EAAgB,CAAhB,IAAsBA,CAAC,GAAG,CAAJ,IAAS,CAA/B;IACA;;IAED,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,WAAL,GAAmB,CAAvC,EAA0CS,CAAC,EAA3C,EAA+C;MAC9C,IAAI,KAAKU,OAAL,CAAa,CAAb,EAAgBV,CAAhB,KAAsB,IAA1B,EAAgC;QAC/B;MACA;;MACD,KAAKU,OAAL,CAAa,CAAb,EAAgBV,CAAhB,IAAsBA,CAAC,GAAG,CAAJ,IAAS,CAA/B;IACA;EACD,CAfD;;EAiBAa,KAAK,CAACU,0BAAN,GAAmC,YAAW;IAE7C,IAAIqB,GAAG,GAAGrC,IAAI,CAACzB,kBAAL,CAAwB,KAAK5D,UAA7B,CAAV;;IAEA,KAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4J,GAAG,CAACzJ,MAAxB,EAAgCH,CAAC,EAAjC,EAAqC;MAEpC,KAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiH,GAAG,CAACzJ,MAAxB,EAAgCwC,CAAC,EAAjC,EAAqC;QAEpC,IAAI+D,GAAG,GAAGkD,GAAG,CAAC5J,CAAD,CAAb;QACA,IAAI2G,GAAG,GAAGiD,GAAG,CAACjH,CAAD,CAAb;;QAEA,IAAI,KAAK+E,OAAL,CAAahB,GAAb,EAAkBC,GAAlB,KAA0B,IAA9B,EAAoC;UACnC;QACA;;QAED,KAAK,IAAII,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;UAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;YAE7B,IAAID,CAAC,IAAI,CAAC,CAAN,IAAWA,CAAC,IAAI,CAAhB,IAAqBC,CAAC,IAAI,CAAC,CAA3B,IAAgCA,CAAC,IAAI,CAArC,IACED,CAAC,IAAI,CAAL,IAAUC,CAAC,IAAI,CADrB,EAC0B;cACzB,KAAKU,OAAL,CAAahB,GAAG,GAAGK,CAAnB,EAAsBJ,GAAG,GAAGK,CAA5B,IAAiC,IAAjC;YACA,CAHD,MAGO;cACN,KAAKU,OAAL,CAAahB,GAAG,GAAGK,CAAnB,EAAsBJ,GAAG,GAAGK,CAA5B,IAAiC,KAAjC;YACA;UACD;QACD;MACD;IACD;EACD,CA7BD;;EA+BAa,KAAK,CAACa,eAAN,GAAwB,UAASL,IAAT,EAAe;IAEtC,IAAIwB,IAAI,GAAGtC,IAAI,CAAC3B,gBAAL,CAAsB,KAAK1D,UAA3B,CAAX;;IAEA,KAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC5B,IAAIqE,GAAG,GAAI,CAACgE,IAAD,IAAS,CAAGwB,IAAI,IAAI7J,CAAT,GAAc,CAAhB,KAAsB,CAA1C;MACA,KAAK0H,OAAL,CAAaxE,IAAI,CAACC,KAAL,CAAWnD,CAAC,GAAG,CAAf,CAAb,EAAgCA,CAAC,GAAG,CAAJ,GAAQ,KAAKuG,WAAb,GAA2B,CAA3B,GAA+B,CAA/D,IAAoElC,GAApE;IACA;;IAED,KAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC5B,IAAIqE,GAAG,GAAI,CAACgE,IAAD,IAAS,CAAGwB,IAAI,IAAI7J,CAAT,GAAc,CAAhB,KAAsB,CAA1C;MACA,KAAK0H,OAAL,CAAa1H,CAAC,GAAG,CAAJ,GAAQ,KAAKuG,WAAb,GAA2B,CAA3B,GAA+B,CAA5C,EAA+CrD,IAAI,CAACC,KAAL,CAAWnD,CAAC,GAAG,CAAf,CAA/C,IAAoEqE,GAApE;IACA;EACD,CAbD;;EAeAwD,KAAK,CAACY,aAAN,GAAsB,UAASJ,IAAT,EAAerC,WAAf,EAA4B;IAEjD,IAAIhF,IAAI,GAAI,KAAKmB,iBAAL,IAA0B,CAA3B,GAAgC6D,WAA3C;IACA,IAAI6D,IAAI,GAAGtC,IAAI,CAAC9B,cAAL,CAAoBzE,IAApB,CAAX,CAHiD,CAKjD;;IACA,KAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAE5B,IAAIqE,GAAG,GAAI,CAACgE,IAAD,IAAS,CAAGwB,IAAI,IAAI7J,CAAT,GAAc,CAAhB,KAAsB,CAA1C;;MAEA,IAAIA,CAAC,GAAG,CAAR,EAAW;QACV,KAAK0H,OAAL,CAAa1H,CAAb,EAAgB,CAAhB,IAAqBqE,GAArB;MACA,CAFD,MAEO,IAAIrE,CAAC,GAAG,CAAR,EAAW;QACjB,KAAK0H,OAAL,CAAa1H,CAAC,GAAG,CAAjB,EAAoB,CAApB,IAAyBqE,GAAzB;MACA,CAFM,MAEA;QACN,KAAKqD,OAAL,CAAa,KAAKnB,WAAL,GAAmB,EAAnB,GAAwBvG,CAArC,EAAwC,CAAxC,IAA6CqE,GAA7C;MACA;IACD,CAjBgD,CAmBjD;;;IACA,KAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAE5B,IAAIqE,GAAG,GAAI,CAACgE,IAAD,IAAS,CAAGwB,IAAI,IAAI7J,CAAT,GAAc,CAAhB,KAAsB,CAA1C;;MAEA,IAAIA,CAAC,GAAG,CAAR,EAAW;QACV,KAAK0H,OAAL,CAAa,CAAb,EAAgB,KAAKnB,WAAL,GAAmBvG,CAAnB,GAAuB,CAAvC,IAA4CqE,GAA5C;MACA,CAFD,MAEO,IAAIrE,CAAC,GAAG,CAAR,EAAW;QACjB,KAAK0H,OAAL,CAAa,CAAb,EAAgB,KAAK1H,CAAL,GAAS,CAAT,GAAa,CAA7B,IAAkCqE,GAAlC;MACA,CAFM,MAEA;QACN,KAAKqD,OAAL,CAAa,CAAb,EAAgB,KAAK1H,CAAL,GAAS,CAAzB,IAA8BqE,GAA9B;MACA;IACD,CA/BgD,CAiCjD;;;IACA,KAAKqD,OAAL,CAAa,KAAKnB,WAAL,GAAmB,CAAhC,EAAmC,CAAnC,IAAyC,CAAC8B,IAA1C;EACA,CAnCD;;EAqCAR,KAAK,CAACe,OAAN,GAAgB,UAAS5H,IAAT,EAAegF,WAAf,EAA4B;IAE3C,IAAI8D,GAAG,GAAG,CAAC,CAAX;IACA,IAAIpD,GAAG,GAAG,KAAKH,WAAL,GAAmB,CAA7B;IACA,IAAIwD,QAAQ,GAAG,CAAf;IACA,IAAIC,SAAS,GAAG,CAAhB;;IAEA,KAAK,IAAIrD,GAAG,GAAG,KAAKJ,WAAL,GAAmB,CAAlC,EAAqCI,GAAG,GAAG,CAA3C,EAA8CA,GAAG,IAAI,CAArD,EAAwD;MAEvD,IAAIA,GAAG,IAAI,CAAX,EAAcA,GAAG;;MAEjB,OAAO,IAAP,EAAa;QAEZ,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;UAE3B,IAAI,KAAKU,OAAL,CAAahB,GAAb,EAAkBC,GAAG,GAAGK,CAAxB,KAA8B,IAAlC,EAAwC;YAEvC,IAAIH,IAAI,GAAG,KAAX;;YAEA,IAAImD,SAAS,GAAGhJ,IAAI,CAACb,MAArB,EAA6B;cAC5B0G,IAAI,GAAK,CAAG7F,IAAI,CAACgJ,SAAD,CAAJ,KAAoBD,QAArB,GAAiC,CAAnC,KAAyC,CAAlD;YACA;;YAED,IAAIE,IAAI,GAAG1C,IAAI,CAACxB,OAAL,CAAaC,WAAb,EAA0BU,GAA1B,EAA+BC,GAAG,GAAGK,CAArC,CAAX;;YAEA,IAAIiD,IAAJ,EAAU;cACTpD,IAAI,GAAG,CAACA,IAAR;YACA;;YAED,KAAKa,OAAL,CAAahB,GAAb,EAAkBC,GAAG,GAAGK,CAAxB,IAA6BH,IAA7B;YACAkD,QAAQ;;YAER,IAAIA,QAAQ,IAAI,CAAC,CAAjB,EAAoB;cACnBC,SAAS;cACTD,QAAQ,GAAG,CAAX;YACA;UACD;QACD;;QAEDrD,GAAG,IAAIoD,GAAP;;QAEA,IAAIpD,GAAG,GAAG,CAAN,IAAW,KAAKH,WAAL,IAAoBG,GAAnC,EAAwC;UACvCA,GAAG,IAAIoD,GAAP;UACAA,GAAG,GAAG,CAACA,GAAP;UACA;QACA;MACD;IACD;EACD,CAhDD;;EAkDArC,QAAQ,CAACyC,IAAT,GAAgB,IAAhB;EACAzC,QAAQ,CAAC0C,IAAT,GAAgB,IAAhB;;EAEA1C,QAAQ,CAACkB,UAAT,GAAsB,UAASzG,UAAT,EAAqBC,iBAArB,EAAwCyF,QAAxC,EAAkD;IAEvE,IAAIK,QAAQ,GAAGZ,OAAO,CAACpF,WAAR,CAAoBC,UAApB,EAAgCC,iBAAhC,CAAf;IAEA,IAAIjB,MAAM,GAAG,IAAIoG,SAAJ,EAAb;;IAEA,KAAK,IAAItH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4H,QAAQ,CAACzH,MAA7B,EAAqCH,CAAC,EAAtC,EAA0C;MACzC,IAAIgB,IAAI,GAAG4G,QAAQ,CAAC5H,CAAD,CAAnB;MACAkB,MAAM,CAACE,GAAP,CAAWJ,IAAI,CAACF,IAAhB,EAAsB,CAAtB;MACAI,MAAM,CAACE,GAAP,CAAWJ,IAAI,CAACC,SAAL,EAAX,EAA6BsG,IAAI,CAACjE,eAAL,CAAqBtC,IAAI,CAACF,IAA1B,EAAgCoB,UAAhC,CAA7B;MACAlB,IAAI,CAACG,KAAL,CAAWD,MAAX;IACA,CAXsE,CAavE;;;IACA,IAAIgH,cAAc,GAAG,CAArB;;IACA,KAAK,IAAIlI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiI,QAAQ,CAAC9H,MAA7B,EAAqCH,CAAC,EAAtC,EAA0C;MACzCkI,cAAc,IAAID,QAAQ,CAACjI,CAAD,CAAR,CAAY+B,SAA9B;IACA;;IAED,IAAIb,MAAM,CAACoC,eAAP,KAA2B4E,cAAc,GAAG,CAAhD,EAAmD;MAClD,MAAM,IAAI3F,KAAJ,CAAU,4BACbrB,MAAM,CAACoC,eAAP,EADa,GAEb,GAFa,GAGZ4E,cAAc,GAAG,CAHL,GAIb,GAJG,CAAN;IAKA,CAzBsE,CA2BvE;;;IACA,IAAIhH,MAAM,CAACoC,eAAP,KAA2B,CAA3B,IAAgC4E,cAAc,GAAG,CAArD,EAAwD;MACvDhH,MAAM,CAACE,GAAP,CAAW,CAAX,EAAc,CAAd;IACA,CA9BsE,CAgCvE;;;IACA,OAAOF,MAAM,CAACoC,eAAP,KAA2B,CAA3B,IAAgC,CAAvC,EAA0C;MACzCpC,MAAM,CAACmC,MAAP,CAAc,KAAd;IACA,CAnCsE,CAqCvE;;;IACA,OAAO,IAAP,EAAa;MAEZ,IAAInC,MAAM,CAACoC,eAAP,MAA4B4E,cAAc,GAAG,CAAjD,EAAoD;QACnD;MACA;;MACDhH,MAAM,CAACE,GAAP,CAAWqG,QAAQ,CAACyC,IAApB,EAA0B,CAA1B;;MAEA,IAAIhJ,MAAM,CAACoC,eAAP,MAA4B4E,cAAc,GAAG,CAAjD,EAAoD;QACnD;MACA;;MACDhH,MAAM,CAACE,GAAP,CAAWqG,QAAQ,CAAC0C,IAApB,EAA0B,CAA1B;IACA;;IAED,OAAO1C,QAAQ,CAAC2C,WAAT,CAAqBlJ,MAArB,EAA6B+G,QAA7B,CAAP;EACA,CApDD;;EAsDAR,QAAQ,CAAC2C,WAAT,GAAuB,UAASlJ,MAAT,EAAiB+G,QAAjB,EAA2B;IAEjD,IAAI/D,MAAM,GAAG,CAAb;IAEA,IAAImG,UAAU,GAAG,CAAjB;IACA,IAAIC,UAAU,GAAG,CAAjB;IAEA,IAAIC,MAAM,GAAG,IAAI9H,KAAJ,CAAUwF,QAAQ,CAAC9H,MAAnB,CAAb;IACA,IAAIqK,MAAM,GAAG,IAAI/H,KAAJ,CAAUwF,QAAQ,CAAC9H,MAAnB,CAAb;;IAEA,KAAK,IAAI4G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,QAAQ,CAAC9H,MAA7B,EAAqC4G,CAAC,EAAtC,EAA0C;MAEzC,IAAI0D,OAAO,GAAGxC,QAAQ,CAAClB,CAAD,CAAR,CAAYhF,SAA1B;MACA,IAAI2I,OAAO,GAAGzC,QAAQ,CAAClB,CAAD,CAAR,CAAYjF,UAAZ,GAAyB2I,OAAvC;MAEAJ,UAAU,GAAGnH,IAAI,CAACyH,GAAL,CAASN,UAAT,EAAqBI,OAArB,CAAb;MACAH,UAAU,GAAGpH,IAAI,CAACyH,GAAL,CAASL,UAAT,EAAqBI,OAArB,CAAb;MAEAH,MAAM,CAACxD,CAAD,CAAN,GAAY,IAAItE,KAAJ,CAAUgI,OAAV,CAAZ;;MAEA,KAAK,IAAIzK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuK,MAAM,CAACxD,CAAD,CAAN,CAAU5G,MAA9B,EAAsCH,CAAC,EAAvC,EAA2C;QAC1CuK,MAAM,CAACxD,CAAD,CAAN,CAAU/G,CAAV,IAAe,OAAOkB,MAAM,CAACA,MAAP,CAAclB,CAAC,GAAGkE,MAAlB,CAAtB;MACA;;MACDA,MAAM,IAAIuG,OAAV;MAEA,IAAIG,MAAM,GAAGrD,IAAI,CAACtB,yBAAL,CAA+ByE,OAA/B,CAAb;MACA,IAAIG,OAAO,GAAG,IAAIrD,UAAJ,CAAe+C,MAAM,CAACxD,CAAD,CAArB,EAA0B6D,MAAM,CAAC3J,SAAP,KAAqB,CAA/C,CAAd;MAEA,IAAI6J,OAAO,GAAGD,OAAO,CAACxG,GAAR,CAAYuG,MAAZ,CAAd;MACAJ,MAAM,CAACzD,CAAD,CAAN,GAAY,IAAItE,KAAJ,CAAUmI,MAAM,CAAC3J,SAAP,KAAqB,CAA/B,CAAZ;;MACA,KAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwK,MAAM,CAACzD,CAAD,CAAN,CAAU5G,MAA9B,EAAsCH,CAAC,EAAvC,EAA2C;QACjC,IAAI+K,QAAQ,GAAG/K,CAAC,GAAG8K,OAAO,CAAC7J,SAAR,EAAJ,GAA0BuJ,MAAM,CAACzD,CAAD,CAAN,CAAU5G,MAAnD;QACTqK,MAAM,CAACzD,CAAD,CAAN,CAAU/G,CAAV,IAAgB+K,QAAQ,IAAI,CAAb,GAAiBD,OAAO,CAAC/H,GAAR,CAAYgI,QAAZ,CAAjB,GAAyC,CAAxD;MACA;IAED;;IAED,IAAIC,cAAc,GAAG,CAArB;;IACA,KAAK,IAAIhL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiI,QAAQ,CAAC9H,MAA7B,EAAqCH,CAAC,EAAtC,EAA0C;MACzCgL,cAAc,IAAI/C,QAAQ,CAACjI,CAAD,CAAR,CAAY8B,UAA9B;IACA;;IAED,IAAId,IAAI,GAAG,IAAIyB,KAAJ,CAAUuI,cAAV,CAAX;IACA,IAAIhI,KAAK,GAAG,CAAZ;;IAEA,KAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqK,UAApB,EAAgCrK,CAAC,EAAjC,EAAqC;MACpC,KAAK,IAAI+G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,QAAQ,CAAC9H,MAA7B,EAAqC4G,CAAC,EAAtC,EAA0C;QACzC,IAAI/G,CAAC,GAAGuK,MAAM,CAACxD,CAAD,CAAN,CAAU5G,MAAlB,EAA0B;UACzBa,IAAI,CAACgC,KAAK,EAAN,CAAJ,GAAgBuH,MAAM,CAACxD,CAAD,CAAN,CAAU/G,CAAV,CAAhB;QACA;MACD;IACD;;IAED,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsK,UAApB,EAAgCtK,CAAC,EAAjC,EAAqC;MACpC,KAAK,IAAI+G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,QAAQ,CAAC9H,MAA7B,EAAqC4G,CAAC,EAAtC,EAA0C;QACzC,IAAI/G,CAAC,GAAGwK,MAAM,CAACzD,CAAD,CAAN,CAAU5G,MAAlB,EAA0B;UACzBa,IAAI,CAACgC,KAAK,EAAN,CAAJ,GAAgBwH,MAAM,CAACzD,CAAD,CAAN,CAAU/G,CAAV,CAAhB;QACA;MACD;IACD;;IAED,OAAOgB,IAAP;EACA,CA9DD;;EAgEA,IAAIiK,QAAQ,GAAGxD,QAAf;EAEA,IAAIyD,wBAAwB,GAAG,GAA/B,CAntCqB,CAotCrB;;EACA,IAAIC,eAAe,GAAI,YAAY;IAC/B,IAAI;MACA,IAAIC,MAAJ,GAAaC,OAAb,CAAqB,IAAID,MAAJ,EAArB;IACH,CAFD,CAGA,OAAOhH,CAAP,EAAU;MACN,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH,CARqB,EAAtB;;EASA,SAASkH,MAAT,CAAgBtK,IAAhB,EAAsBuK,KAAtB,EAA6B;IACzB,IAAIpJ,iBAAiB,GAAGZ,iBAAiB,CAACgK,KAAD,CAAzC,CADyB,CAEzB;;IACA,IAAIC,MAAM,GAAG,IAAIP,QAAJ,CAAa,CAAC,CAAd,EAAiB9I,iBAAjB,CAAb;IACAqJ,MAAM,CAAC1D,OAAP,CAAe2D,YAAY,CAACzK,IAAD,CAA3B;IACAwK,MAAM,CAACxD,IAAP;IACA,OAAOwD,MAAP;EACH;;EACD,SAASE,sBAAT,CAAgCH,KAAhC,EAAuC;IACnC,OAAOA,KAAK,IAAIhK,iBAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACI,SAASkK,YAAT,CAAsBE,GAAtB,EAA2B;IACvB,IAAIC,OAAO,GAAG,EAAd;;IACA,KAAK,IAAI5L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2L,GAAG,CAACxL,MAAxB,EAAgCH,CAAC,EAAjC,EAAqC;MACjC,IAAI6L,QAAQ,GAAGF,GAAG,CAACtK,UAAJ,CAAerB,CAAf,CAAf;;MACA,IAAI6L,QAAQ,GAAG,MAAf,EAAuB;QACnBD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoBF,QAApB,CAAX;MACH,CAFD,MAGK,IAAIA,QAAQ,GAAG,MAAf,EAAuB;QACxBD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAAQF,QAAQ,IAAI,CAAxC,CAAX;QACAD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAAQF,QAAQ,GAAG,IAAvC,CAAX;MACH,CAHI,MAIA,IAAIA,QAAQ,GAAG,MAAX,IAAqBA,QAAQ,IAAI,MAArC,EAA6C;QAC9CD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAAQF,QAAQ,IAAI,EAAxC,CAAX;QACAD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAASF,QAAQ,IAAI,CAAb,GAAkB,IAA9C,CAAX;QACAD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAAQF,QAAQ,GAAG,IAAvC,CAAX;MACH,CAJI,MAKA;QACD;QACA7L,CAAC,GAFA,CAGD;QACA;QACA;;QACA6L,QAAQ,GACJ,WAAY,CAACA,QAAQ,GAAG,KAAZ,KAAsB,EAAvB,GAA8BF,GAAG,CAACtK,UAAJ,CAAerB,CAAf,IAAoB,KAA7D,CADJ;QAEA4L,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAAQF,QAAQ,IAAI,EAAxC,CAAX;QACAD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAASF,QAAQ,IAAI,EAAb,GAAmB,IAA/C,CAAX;QACAD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAASF,QAAQ,IAAI,CAAb,GAAkB,IAA9C,CAAX;QACAD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoB,OAAQF,QAAQ,GAAG,IAAvC,CAAX;MACH;IACJ;;IACD,OAAOD,OAAP;EACH;;EACD,SAASI,YAAT,CAAsBtE,OAAtB,EAA+BuE,MAA/B,EAAuC;IACnC,IAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;MAAEA,MAAM,GAAG,CAAT;IAAa;;IACtC,IAAIC,GAAG,GAAG,EAAV;IACAxE,OAAO,CAACyE,OAAR,CAAgB,UAAUzF,GAAV,EAAe4C,CAAf,EAAkB;MAC9B,IAAI8C,KAAK,GAAG,IAAZ;MACA1F,GAAG,CAACyF,OAAJ,CAAY,UAAUE,IAAV,EAAgB9C,CAAhB,EAAmB;QAC3B,IAAI,CAAC8C,IAAD,IAASD,KAAK,KAAK,IAAvB,EAA6B;UACzB;UACA;UACAF,GAAG,CAACtJ,IAAJ,CAAS,OAAOwJ,KAAK,GAAGH,MAAf,IAAyB,GAAzB,IAAgC3C,CAAC,GAAG2C,MAApC,IAA8C,GAA9C,IAAqD1C,CAAC,GAAG6C,KAAzD,IAAkE,KAAlE,IAA2EA,KAAK,GAAGH,MAAnF,IAA6F,GAAtG;UACAG,KAAK,GAAG,IAAR;UACA;QACH,CAP0B,CAQ3B;;;QACA,IAAI7C,CAAC,KAAK7C,GAAG,CAACvG,MAAJ,GAAa,CAAvB,EAA0B;UACtB,IAAI,CAACkM,IAAL,EAAW;YACP;YACA;YACA;UACH;;UACD,IAAID,KAAK,KAAK,IAAd,EAAoB;YAChB;YACAF,GAAG,CAACtJ,IAAJ,CAAS,OAAO2G,CAAC,GAAG0C,MAAX,IAAqB,GAArB,IAA4B3C,CAAC,GAAG2C,MAAhC,IAA0C,QAA1C,IAAsD1C,CAAC,GAAG0C,MAA1D,IAAoE,GAA7E;UACH,CAHD,MAIK;YACD;YACAC,GAAG,CAACtJ,IAAJ,CAAS,OAAOwJ,KAAK,GAAGH,MAAf,IAAyB,GAAzB,IAAgC3C,CAAC,GAAG2C,MAApC,IAA8C,IAA9C,IAAsD1C,CAAC,GAAG,CAAJ,GAAQ6C,KAA9D,IAAuE,KAAvE,IAAgFA,KAAK,GAAGH,MAAxF,IAAkG,GAA3G;UACH;;UACD;QACH;;QACD,IAAII,IAAI,IAAID,KAAK,KAAK,IAAtB,EAA4B;UACxBA,KAAK,GAAG7C,CAAR;QACH;MACJ,CA5BD;IA6BH,CA/BD;IAgCA,OAAO2C,GAAG,CAACI,IAAJ,CAAS,EAAT,CAAP;EACH;;EACD,IAAIC,WAAW,GAAG;IACdC,KAAK,EAAE;MACHpG,IAAI,EAAE0F,MADH;MAEHW,QAAQ,EAAE,IAFP;MAGH,WAAW;IAHR,CADO;IAMdC,IAAI,EAAE;MACFtG,IAAI,EAAEuG,MADJ;MAEF,WAAW;IAFT,CANQ;IAUdpB,KAAK,EAAE;MACHnF,IAAI,EAAE0F,MADH;MAEH,WAAWZ,wBAFR;MAGH0B,SAAS,EAAE,UAAUC,CAAV,EAAa;QAAE,OAAOnB,sBAAsB,CAACmB,CAAD,CAA7B;MAAmC;IAH1D,CAVO;IAedC,UAAU,EAAE;MACR1G,IAAI,EAAE0F,MADE;MAER,WAAW;IAFH,CAfE;IAmBdiB,UAAU,EAAE;MACR3G,IAAI,EAAE0F,MADE;MAER,WAAW;IAFH,CAnBE;IAuBdG,MAAM,EAAE;MACJ7F,IAAI,EAAEuG,MADF;MAEJF,QAAQ,EAAE,KAFN;MAGJ,WAAW;IAHP;EAvBM,CAAlB;;EA6BA,IAAIO,cAAc,GAAGrN,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK4M,WAAL,CAAT,EAA4B;IAAEU,QAAQ,EAAE;MAC7D7G,IAAI,EAAE0F,MADuD;MAE7DW,QAAQ,EAAE,KAFmD;MAG7D,WAAW,QAHkD;MAI7DG,SAAS,EAAE,UAAUM,EAAV,EAAc;QAAE,OAAO,CAAC,QAAD,EAAW,KAAX,EAAkBC,OAAlB,CAA0BD,EAA1B,IAAgC,CAAC,CAAxC;MAA4C;IAJV;EAAZ,CAA5B,CAA7B;;EAMA,IAAIE,SAAS,GAAG1N,GAAG,CAAC2N,eAAJ,CAAoB;IAChCC,IAAI,EAAE,WAD0B;IAEhCC,KAAK,EAAEhB,WAFyB;IAGhCiB,KAAK,EAAE,UAAUD,KAAV,EAAiB;MACpB,IAAIE,QAAQ,GAAG/N,GAAG,CAACgO,GAAJ,CAAQ,CAAR,CAAf;MACA,IAAIC,MAAM,GAAGjO,GAAG,CAACgO,GAAJ,CAAQ,EAAR,CAAb;;MACA,IAAIE,QAAQ,GAAG,YAAY;QACvB,IAAIpB,KAAK,GAAGe,KAAK,CAACf,KAAlB;QAAA,IAAyBjB,KAAK,GAAGgC,KAAK,CAAChC,KAAvC;QAAA,IAA8CU,MAAM,GAAGsB,KAAK,CAACtB,MAA7D;QACA,IAAI4B,KAAK,GAAGvC,MAAM,CAACkB,KAAD,EAAQjB,KAAR,CAAN,CAAqB7D,OAAjC;QACA+F,QAAQ,CAACjB,KAAT,GAAiBqB,KAAK,CAAC1N,MAAN,GAAe8L,MAAM,GAAG,CAAzC,CAHuB,CAIvB;QACA;QACA;QACA;QACA;QACA;;QACA0B,MAAM,CAACnB,KAAP,GAAeR,YAAY,CAAC6B,KAAD,EAAQ5B,MAAR,CAA3B;MACH,CAXD;;MAYA2B,QAAQ;MACRlO,GAAG,CAACoO,SAAJ,CAAcF,QAAd;MACA,OAAO,YAAY;QAAE,OAAOlO,GAAG,CAACqO,CAAJ,CAAM,KAAN,EAAa;UACrCC,KAAK,EAAET,KAAK,CAACb,IADwB;UAErCuB,MAAM,EAAEV,KAAK,CAACb,IAFuB;UAGrC,mBAAmB,YAHkB;UAIrCwB,KAAK,EAAE,4BAJ8B;UAKrCC,OAAO,EAAE,SAASV,QAAQ,CAACjB,KAAlB,GAA0B,GAA1B,GAAgCiB,QAAQ,CAACjB;QALb,CAAb,EAMzB,CACC9M,GAAG,CAACqO,CAAJ,CAAM,MAAN,EAAc;UACVK,IAAI,EAAEb,KAAK,CAACT,UADF;UAEVpH,CAAC,EAAE,WAAW+H,QAAQ,CAACjB,KAApB,GAA4B,GAA5B,GAAkCiB,QAAQ,CAACjB,KAA3C,GAAmD;QAF5C,CAAd,CADD,EAKC9M,GAAG,CAACqO,CAAJ,CAAM,MAAN,EAAc;UAAEK,IAAI,EAAEb,KAAK,CAACR,UAAd;UAA0BrH,CAAC,EAAEiI,MAAM,CAACnB;QAApC,CAAd,CALD,CANyB,CAAP;MAYhB,CAZL;IAaH;EAjC+B,CAApB,CAAhB;EAmCA,IAAI6B,YAAY,GAAG3O,GAAG,CAAC2N,eAAJ,CAAoB;IACnCC,IAAI,EAAE,cAD6B;IAEnCC,KAAK,EAAEhB,WAF4B;IAGnCiB,KAAK,EAAE,UAAUD,KAAV,EAAiB;MACpB,IAAIe,QAAQ,GAAG5O,GAAG,CAACgO,GAAJ,CAAQ,IAAR,CAAf;;MACA,IAAIE,QAAQ,GAAG,YAAY;QACvB,IAAIpB,KAAK,GAAGe,KAAK,CAACf,KAAlB;QAAA,IAAyBjB,KAAK,GAAGgC,KAAK,CAAChC,KAAvC;QAAA,IAA8CmB,IAAI,GAAGa,KAAK,CAACb,IAA3D;QAAA,IAAiET,MAAM,GAAGsB,KAAK,CAACtB,MAAhF;QAAA,IAAwFa,UAAU,GAAGS,KAAK,CAACT,UAA3G;QAAA,IAAuHC,UAAU,GAAGQ,KAAK,CAACR,UAA1I;QACA,IAAIc,KAAK,GAAGvC,MAAM,CAACkB,KAAD,EAAQjB,KAAR,CAAN,CAAqB7D,OAAjC;QACA,IAAI+F,QAAQ,GAAGI,KAAK,CAAC1N,MAAN,GAAe8L,MAAM,GAAG,CAAvC;QACA,IAAIsC,MAAM,GAAGD,QAAQ,CAAC9B,KAAtB;;QACA,IAAI,CAAC+B,MAAL,EAAa;UACT;QACH;;QACD,IAAIC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV;;QACA,IAAI,CAACD,GAAL,EAAU;UACN;QACH;;QACD,IAAIE,gBAAgB,GAAGC,MAAM,CAACD,gBAAP,IAA2B,CAAlD;QACA,IAAIE,KAAK,GAAIlC,IAAI,GAAGe,QAAR,GAAoBiB,gBAAhC;QACAH,MAAM,CAACN,MAAP,GAAgBM,MAAM,CAACP,KAAP,GAAetB,IAAI,GAAGgC,gBAAtC;QACAF,GAAG,CAACI,KAAJ,CAAUA,KAAV,EAAiBA,KAAjB;QACAJ,GAAG,CAACK,SAAJ,GAAgB/B,UAAhB;QACA0B,GAAG,CAACM,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBrB,QAAnB,EAA6BA,QAA7B;QACAe,GAAG,CAACK,SAAJ,GAAgB9B,UAAhB;;QACA,IAAI5B,eAAJ,EAAqB;UACjBqD,GAAG,CAACJ,IAAJ,CAAS,IAAIhD,MAAJ,CAAWY,YAAY,CAAC6B,KAAD,EAAQ5B,MAAR,CAAvB,CAAT;QACH,CAFD,MAGK;UACD4B,KAAK,CAAC1B,OAAN,CAAc,UAAUzF,GAAV,EAAeqI,GAAf,EAAoB;YAC9BrI,GAAG,CAACyF,OAAJ,CAAY,UAAUE,IAAV,EAAgB2C,GAAhB,EAAqB;cAC7B,IAAI3C,IAAJ,EAAU;gBACNmC,GAAG,CAACM,QAAJ,CAAaE,GAAG,GAAG/C,MAAnB,EAA2B8C,GAAG,GAAG9C,MAAjC,EAAyC,CAAzC,EAA4C,CAA5C;cACH;YACJ,CAJD;UAKH,CAND;QAOH;MACJ,CA/BD;;MAgCAvM,GAAG,CAACuP,SAAJ,CAAcrB,QAAd;MACAlO,GAAG,CAACoO,SAAJ,CAAcF,QAAd;MACA,OAAO,YAAY;QAAE,OAAOlO,GAAG,CAACqO,CAAJ,CAAM,QAAN,EAAgB;UACxCL,GAAG,EAAEY,QADmC;UAExCY,KAAK,EAAE;YAAElB,KAAK,EAAET,KAAK,CAACb,IAAN,GAAa,IAAtB;YAA4BuB,MAAM,EAAEV,KAAK,CAACb,IAAN,GAAa;UAAjD;QAFiC,CAAhB,CAAP;MAGhB,CAHL;IAIH;EA3CkC,CAApB,CAAnB;EA6CA,IAAIlN,SAAS,GAAGE,GAAG,CAAC2N,eAAJ,CAAoB;IAChCC,IAAI,EAAE,QAD0B;IAEhC6B,MAAM,EAAE,YAAY;MAChB,IAAIC,EAAE,GAAG,KAAKC,MAAd;MAAA,IAAsBpC,QAAQ,GAAGmC,EAAE,CAACnC,QAApC;MAAA,IAA8CT,KAAK,GAAG4C,EAAE,CAAC5C,KAAzD;MAAA,IAAgE8C,KAAK,GAAGF,EAAE,CAAC1C,IAA3E;MAAA,IAAiF6C,OAAO,GAAGH,EAAE,CAACnD,MAA9F;MAAA,IAAsGuD,MAAM,GAAGJ,EAAE,CAAC7D,KAAlH;MAAA,IAAyHuB,UAAU,GAAGsC,EAAE,CAACtC,UAAzI;MAAA,IAAqJC,UAAU,GAAGqC,EAAE,CAACrC,UAArK;MACA,IAAIL,IAAI,GAAG4C,KAAK,KAAK,CAArB;MACA,IAAIrD,MAAM,GAAGsD,OAAO,KAAK,CAAzB;MACA,IAAIhE,KAAK,GAAGG,sBAAsB,CAAC8D,MAAD,CAAtB,GAAiCA,MAAjC,GAA0CtE,wBAAtD;MACA,OAAOxL,GAAG,CAACqO,CAAJ,CAAMd,QAAQ,KAAK,KAAb,GAAqBG,SAArB,GAAiCiB,YAAvC,EAAqD;QAAE7B,KAAK,EAAEA,KAAT;QAAgBE,IAAI,EAAEA,IAAtB;QAA4BT,MAAM,EAAEA,MAApC;QAA4CV,KAAK,EAAEA,KAAnD;QAA0DuB,UAAU,EAAEA,UAAtE;QAAkFC,UAAU,EAAEA;MAA9F,CAArD,CAAP;IACH,CAR+B;IAShCQ,KAAK,EAAEP;EATyB,CAApB,CAAhB;EAYA,OAAOxN,SAAP;AAEH,CAz7CD"},"metadata":{},"sourceType":"script"}